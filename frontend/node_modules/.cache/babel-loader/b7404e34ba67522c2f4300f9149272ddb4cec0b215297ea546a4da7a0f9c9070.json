{"ast":null,"code":"// Base API URL - update this to match your backend URL\nconst API_BASE_URL = 'http://localhost:5000';\n\n/**\r\n * Upload a NIRS file to the backend\r\n */\nexport async function uploadFile(file) {\n  const formData = new FormData();\n  formData.append('file', file);\n  const response = await fetch(`${API_BASE_URL}/api/upload`, {\n    method: 'POST',\n    body: formData\n  });\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.error || 'Failed to upload file');\n  }\n  const data = await response.json();\n  return {\n    id: data.file_id,\n    name: data.filename\n  };\n}\n\n/**\r\n * Fetch available files from the backend\r\n */\nexport async function fetchAvailableFiles() {\n  const response = await fetch(`${API_BASE_URL}/api/files`);\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.error || 'Failed to fetch available files');\n  }\n  const data = await response.json();\n  return data.files.map(file => ({\n    id: file.file_id,\n    name: file.filename\n  }));\n}\n\n/**\r\n * Fetch activities available in a specific file\r\n */\nexport async function fetchFileActivities(fileId) {\n  const response = await fetch(`${API_BASE_URL}/api/available_activities?file_id=${fileId}`);\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.error || 'Failed to fetch file activities');\n  }\n  const data = await response.json();\n  return data.activities;\n}\n\n/**\r\n * Run analysis on a specific file with selected activities\r\n */\nexport const analyzeFile = async (fileId, activities) => {\n  try {\n    const response = await fetch(`/api/analyze/${fileId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        activities\n      })\n    });\n    const data = await response.json();\n    console.log(`[DEBUG] API response for file ${fileId}:`, data); // Log completo de la respuesta\n    return data;\n  } catch (error) {\n    console.error(`[ERROR] API call failed for file ${fileId}:`, error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","uploadFile","file","formData","FormData","append","response","fetch","method","body","ok","errorData","json","Error","error","data","id","file_id","name","filename","fetchAvailableFiles","files","map","fetchFileActivities","fileId","activities","analyzeFile","headers","JSON","stringify","console","log"],"sources":["C:/Users/PC/OneDrive - Universidad de Deusto/Documentos/nirs_web_app/frontend/src/api/apiService.js"],"sourcesContent":["// Base API URL - update this to match your backend URL\r\nconst API_BASE_URL = 'http://localhost:5000';\r\n\r\n/**\r\n * Upload a NIRS file to the backend\r\n */\r\nexport async function uploadFile(file) {\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  \r\n  const response = await fetch(`${API_BASE_URL}/api/upload`, {\r\n    method: 'POST',\r\n    body: formData\r\n  });\r\n  \r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.error || 'Failed to upload file');\r\n  }\r\n  \r\n  const data = await response.json();\r\n  return {\r\n    id: data.file_id,\r\n    name: data.filename\r\n  };\r\n}\r\n\r\n/**\r\n * Fetch available files from the backend\r\n */\r\nexport async function fetchAvailableFiles() {\r\n  const response = await fetch(`${API_BASE_URL}/api/files`);\r\n  \r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.error || 'Failed to fetch available files');\r\n  }\r\n  \r\n  const data = await response.json();\r\n  return data.files.map(file => ({\r\n    id: file.file_id,\r\n    name: file.filename\r\n  }));\r\n}\r\n\r\n/**\r\n * Fetch activities available in a specific file\r\n */\r\nexport async function fetchFileActivities(fileId) {\r\n  const response = await fetch(`${API_BASE_URL}/api/available_activities?file_id=${fileId}`);\r\n  \r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.error || 'Failed to fetch file activities');\r\n  }\r\n  \r\n  const data = await response.json();\r\n  return data.activities;\r\n}\r\n\r\n/**\r\n * Run analysis on a specific file with selected activities\r\n */\r\nexport const analyzeFile = async (fileId, activities) => {\r\n  try {\r\n    const response = await fetch(`/api/analyze/${fileId}`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ activities }),\r\n    });\r\n    const data = await response.json();\r\n    console.log(`[DEBUG] API response for file ${fileId}:`, data); // Log completo de la respuesta\r\n    return data;\r\n  } catch (error) {\r\n    console.error(`[ERROR] API call failed for file ${fileId}:`, error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG,uBAAuB;;AAE5C;AACA;AACA;AACA,OAAO,eAAeC,UAAUA,CAACC,IAAI,EAAE;EACrC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAE7B,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,YAAY,aAAa,EAAE;IACzDQ,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEN;EACR,CAAC,CAAC;EAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;IAChB,MAAMC,SAAS,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,KAAK,IAAI,uBAAuB,CAAC;EAC7D;EAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACM,IAAI,CAAC,CAAC;EAClC,OAAO;IACLI,EAAE,EAAED,IAAI,CAACE,OAAO;IAChBC,IAAI,EAAEH,IAAI,CAACI;EACb,CAAC;AACH;;AAEA;AACA;AACA;AACA,OAAO,eAAeC,mBAAmBA,CAAA,EAAG;EAC1C,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,YAAY,YAAY,CAAC;EAEzD,IAAI,CAACM,QAAQ,CAACI,EAAE,EAAE;IAChB,MAAMC,SAAS,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,KAAK,IAAI,iCAAiC,CAAC;EACvE;EAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACM,IAAI,CAAC,CAAC;EAClC,OAAOG,IAAI,CAACM,KAAK,CAACC,GAAG,CAACpB,IAAI,KAAK;IAC7Bc,EAAE,EAAEd,IAAI,CAACe,OAAO;IAChBC,IAAI,EAAEhB,IAAI,CAACiB;EACb,CAAC,CAAC,CAAC;AACL;;AAEA;AACA;AACA;AACA,OAAO,eAAeI,mBAAmBA,CAACC,MAAM,EAAE;EAChD,MAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,YAAY,qCAAqCwB,MAAM,EAAE,CAAC;EAE1F,IAAI,CAAClB,QAAQ,CAACI,EAAE,EAAE;IAChB,MAAMC,SAAS,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,KAAK,IAAI,iCAAiC,CAAC;EACvE;EAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACM,IAAI,CAAC,CAAC;EAClC,OAAOG,IAAI,CAACU,UAAU;AACxB;;AAEA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOF,MAAM,EAAEC,UAAU,KAAK;EACvD,IAAI;IACF,MAAMnB,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgBiB,MAAM,EAAE,EAAE;MACrDhB,MAAM,EAAE,MAAM;MACdmB,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/ClB,IAAI,EAAEmB,IAAI,CAACC,SAAS,CAAC;QAAEJ;MAAW,CAAC;IACrC,CAAC,CAAC;IACF,MAAMV,IAAI,GAAG,MAAMT,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClCkB,OAAO,CAACC,GAAG,CAAC,iCAAiCP,MAAM,GAAG,EAAET,IAAI,CAAC,CAAC,CAAC;IAC/D,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOD,KAAK,EAAE;IACdgB,OAAO,CAAChB,KAAK,CAAC,oCAAoCU,MAAM,GAAG,EAAEV,KAAK,CAAC;IACnE,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}