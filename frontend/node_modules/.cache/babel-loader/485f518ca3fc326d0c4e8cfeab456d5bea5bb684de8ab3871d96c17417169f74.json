{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive - Universidad de Deusto\\\\Documentos\\\\nirs_web_app\\\\frontend\\\\src\\\\components\\\\PlotViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// Asegúrate de importar el CSS correcto que contiene .scrollable-plot-container etc.\nimport '../styles/components.css'; // O '../styles/PlotViewer.css' si ahí están los estilos\n\n// ... (isEventsPlot, isChannelsPlot, isBrainVizDict functions remain the same) ...\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PlotViewer({\n  fileName,\n  plotData\n}) {\n  _s();\n  var _plotData$message, _temporalValidation$v, _temporalValidation$v2, _temporalValidation$p, _temporalValidation$p2, _temporalValidation$m;\n  const [expandedImage, setExpandedImage] = useState(null);\n  if (!plotData || Object.keys(plotData).length === 0) {\n    return null; // Return null or some placeholder if no data\n  }\n  const hasError = plotData.error || ((_plotData$message = plotData.message) === null || _plotData$message === void 0 ? void 0 : _plotData$message.includes('error'));\n  const allPlots = plotData.plots || plotData; // Use plots if nested, otherwise assume top level\n  const features = plotData.features || {}; // Handle features if present\n  const interpretation = plotData.interpretation || {}; // Handle interpretation if present\n  const temporalValidation = plotData.temporal_validation || null; // Handle temporal validation\n\n  const handleImageClick = (base64Image, name) => {\n    setExpandedImage({\n      src: base64Image,\n      name: name\n    });\n  };\n  const handleCloseExpanded = e => {\n    e.stopPropagation();\n    setExpandedImage(null);\n  };\n\n  // Helper function to check if a plot name indicates an events plot\n  const isEventsPlot = plotName => {\n    return plotName.toLowerCase().includes('event') && !plotName.toLowerCase().includes('activation'); // Exclude activation plots\n  };\n\n  // Helper function to check if a plot name indicates a channels plot\n  const isChannelsPlot = plotName => {\n    return plotName.toLowerCase().includes('channel') && !plotName.toLowerCase().includes('visualization'); // Exclude old activation plots if any\n  };\n\n  // Function to check for the brain visualizations dictionary\n  const isBrainVizDict = plotName => {\n    return plotName === 'brain_visualizations_by_event';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plot-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"file-heading\",\n      children: fileName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), temporalValidation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"temporal-validation-results plot-item plot-item-medium\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Temporal Bias Validation Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Validation Score (AUC): \", (_temporalValidation$v = (_temporalValidation$v2 = temporalValidation.validation_score) === null || _temporalValidation$v2 === void 0 ? void 0 : _temporalValidation$v2.toFixed(3)) !== null && _temporalValidation$v !== void 0 ? _temporalValidation$v : 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"P-value: \", (_temporalValidation$p = (_temporalValidation$p2 = temporalValidation.p_value) === null || _temporalValidation$p2 === void 0 ? void 0 : _temporalValidation$p2.toFixed(5)) !== null && _temporalValidation$p !== void 0 ? _temporalValidation$p : 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Conclusion: \", (_temporalValidation$m = temporalValidation.message) !== null && _temporalValidation$m !== void 0 ? _temporalValidation$m : 'No conclusion available.']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), temporalValidation.plot && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Feature Performance vs. Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scrollable-plot-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/png;base64,${temporalValidation.plot}`,\n            alt: \"Temporal Validation Plot\",\n            className: \"plot-image\",\n            style: {\n              maxWidth: 'none',\n              height: 'auto',\n              cursor: 'pointer'\n            } // Allow natural size, add cursor\n            ,\n            onClick: () => handleImageClick(temporalValidation.plot, 'Temporal Validation Plot')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scroll-hint\",\n          children: \"Scroll horizontally if the plot is too wide.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: plotData.error || plotData.message || \"Analysis could not be completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), allPlots.events && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plot-item plot-item-large\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Events Timeline (Error Context)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scrollable-plot-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/png;base64,${allPlots.events}`,\n            alt: \"Events Timeline\",\n            className: \"plot-image\"\n            // Let CSS handle sizing, only add essential inline styles\n            ,\n            style: {\n              maxWidth: 'none',\n              height: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scroll-hint\",\n          children: \"Scroll horizontally to view the full timeline.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), plotData.message && !hasError && !temporalValidation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: plotData.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), !hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plots-container\",\n      children: [Object.entries(allPlots).filter(([plotName, base64Image]) => base64Image && typeof base64Image === 'string' && isEventsPlot(plotName)).map(([plotName, base64Image]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plot-item plot-item-large\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: formatPlotName(plotName)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scrollable-plot-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/png;base64,${base64Image}`,\n            alt: `${plotName} plot`,\n            className: \"plot-image\",\n            onClick: () => handleImageClick(base64Image, formatPlotName(plotName))\n            // Let CSS handle sizing, only add essential inline styles\n            ,\n            style: {\n              cursor: 'pointer',\n              maxWidth: 'none',\n              height: '400px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scroll-hint\",\n          children: \"Scroll horizontally to view the full timeline.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this)]\n      }, plotName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }, this)), Object.entries(allPlots).filter(([plotName, base64Image]) => base64Image && typeof base64Image === 'string' && isChannelsPlot(plotName)).map(([plotName, base64Image]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plot-item plot-item-large\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: formatPlotName(plotName)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scrollable-channels-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-container image-container-channels\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/png;base64,${base64Image}`,\n              alt: `${plotName} plot`,\n              className: \"plot-image plot-image-channels\",\n              onClick: () => handleImageClick(base64Image, formatPlotName(plotName)),\n              style: {\n                cursor: 'pointer'\n              } // Keep cursor pointer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scroll-hint\",\n            children: \"Scroll down to see more channels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this)]\n      }, plotName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }, this)), Object.entries(allPlots).filter(([plotName, data]) => isBrainVizDict(plotName) && data && typeof data === 'object').flatMap(([_, eventPlots]) => Object.entries(eventPlots).filter(([eventName, base64Image]) => base64Image && typeof base64Image === 'string').map(([eventName, base64Image]) => {\n        // Format title for brain maps\n        const plotTitle = formatPlotName(eventName.includes('vs') ? eventName : `Brain Activation (${eventName})`);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plot-item plot-item-medium\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: plotTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/png;base64,${base64Image}`,\n              alt: plotTitle,\n              className: \"plot-image\",\n              onClick: () => handleImageClick(base64Image, plotTitle),\n              style: {\n                cursor: 'pointer'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 23\n          }, this)]\n        }, `brain-viz-${eventName}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this);\n      })), allPlots.feature_importance && features.top_features && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plot-item plot-item-medium\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Feature Importance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scrollable-plot-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/png;base64,${allPlots.feature_importance}`,\n            alt: \"Feature Importance Plot\",\n            className: \"plot-image\",\n            style: {\n              maxWidth: '400px',\n              height: '300px',\n              cursor: 'pointer'\n            } // Allow natural size\n            ,\n            onClick: () => handleImageClick(allPlots.feature_importance, 'Feature Importance')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scroll-hint\",\n          children: \"Scroll horizontally if the plot is too wide.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top-features-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Top Discriminating Features:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: features.top_features.slice(0, 10).map((feature, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: feature\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 22\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this), Object.entries(allPlots).filter(([plotName, data]) => data && typeof data === 'string' && !isEventsPlot(plotName) && !isChannelsPlot(plotName) && !isBrainVizDict(plotName) && plotName !== 'feature_importance' &&\n      // Add other specific plots handled elsewhere if needed\n      plotName !== 'average_response' && plotName !== 'confusion_matrix').map(([plotName, base64Image]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plot-item\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: formatPlotName(plotName)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/png;base64,${base64Image}`,\n            alt: `${plotName} plot`,\n            className: \"plot-image\" // Let CSS handle max-width: 100%\n            ,\n            onClick: () => handleImageClick(base64Image, formatPlotName(plotName)),\n            style: {\n              cursor: 'pointer'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }, this)]\n      }, plotName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 15\n      }, this)), allPlots.average_response && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plot-item plot-item-medium\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: formatPlotName('average_response')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/png;base64,${allPlots.average_response}`,\n            alt: \"Average Response Plot\",\n            className: \"plot-image\",\n            onClick: () => handleImageClick(allPlots.average_response, formatPlotName('average_response')),\n            style: {\n              cursor: 'pointer'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this)]\n      }, \"average_response\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), allPlots.confusion_matrix && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plot-item plot-item-small\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: formatPlotName('confusion_matrix')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/png;base64,${allPlots.confusion_matrix}`,\n            alt: \"Confusion Matrix\",\n            className: \"plot-image\",\n            onClick: () => handleImageClick(allPlots.confusion_matrix, formatPlotName('confusion_matrix')),\n            style: {\n              cursor: 'pointer'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this)]\n      }, \"confusion_matrix\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), interpretation && Object.keys(interpretation).length > 0 && !hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interpretation-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Interpretation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 12\n      }, this), interpretation.general && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"General:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 42\n        }, this), \" \", interpretation.general]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 39\n      }, this), interpretation.classification && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Classification:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 49\n        }, this), \" \", interpretation.classification]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 46\n      }, this), interpretation.features && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Features:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 43\n        }, this), \" \", interpretation.features]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 40\n      }, this), interpretation.comparison && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Comparison:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 45\n        }, this), \" \", interpretation.comparison]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 10\n    }, this), expandedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expanded-image-overlay\",\n      onClick: () => setExpandedImage(null),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expanded-image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expanded-image-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: expandedImage.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-button\",\n            onClick: handleCloseExpanded,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `data:image/png;base64,${expandedImage.src}`,\n          alt: \"Expanded view\",\n          className: \"expanded-image\",\n          onClick: e => e.stopPropagation(),\n          style: {\n            maxWidth: '95%',\n            maxHeight: '85vh',\n            objectFit: 'contain'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n// Updated formatPlotName function (more robust)\n_s(PlotViewer, \"+U8yK6q4A/WC0g7bofNq42VL6OQ=\");\n_c = PlotViewer;\nfunction formatPlotName(name) {\n  // Handle specific known keys first\n  const knownNames = {\n    'average_response': 'Average Hemodynamic Response',\n    'confusion_matrix': 'Confusion Matrix',\n    'feature_importance': 'Feature Importance',\n    'events': 'Events Timeline',\n    'channels': 'Channels Overview',\n    'Left_vs_Right': 'Activation Difference (Left vs Right)' // Handle difference plot specifically\n    // Add more specific mappings if needed\n  };\n  if (knownNames[name]) {\n    return knownNames[name];\n  }\n\n  // Handle brain activation patterns like \"Brain Activation (Rest)\"\n  if (name.startsWith('Brain Activation (')) {\n    return name; // Assume already formatted\n  }\n\n  // General formatting for snake_case or camelCase\n  return name.replace(/_/g, ' ') // Replace underscores with spaces\n  .replace(/([A-Z])/g, ' $1') // Add space before capital letters (for camelCase)\n  .replace(/(\\d+)/g, ' $1') // Add space before numbers if needed\n  .replace(/ vs /g, ' vs ') // Ensure ' vs ' keeps spaces\n  .trim().split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)) // Capitalize each word (handle lowercase correctly)\n  .join(' ');\n}\nexport default PlotViewer;\nvar _c;\n$RefreshReg$(_c, \"PlotViewer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","PlotViewer","fileName","plotData","_s","_plotData$message","_temporalValidation$v","_temporalValidation$v2","_temporalValidation$p","_temporalValidation$p2","_temporalValidation$m","expandedImage","setExpandedImage","Object","keys","length","hasError","error","message","includes","allPlots","plots","features","interpretation","temporalValidation","temporal_validation","handleImageClick","base64Image","name","src","handleCloseExpanded","e","stopPropagation","isEventsPlot","plotName","toLowerCase","isChannelsPlot","isBrainVizDict","className","children","_jsxFileName","lineNumber","columnNumber","validation_score","toFixed","p_value","plot","alt","style","maxWidth","height","cursor","onClick","events","entries","filter","map","formatPlotName","data","flatMap","_","eventPlots","eventName","plotTitle","feature_importance","top_features","slice","feature","index","average_response","confusion_matrix","general","classification","comparison","maxHeight","objectFit","_c","knownNames","startsWith","replace","trim","split","word","charAt","toUpperCase","join","$RefreshReg$"],"sources":["C:/Users/PC/OneDrive - Universidad de Deusto/Documentos/nirs_web_app/frontend/src/components/PlotViewer.js"],"sourcesContent":["import React, { useState } from 'react';\r\n// Asegúrate de importar el CSS correcto que contiene .scrollable-plot-container etc.\r\nimport '../styles/components.css'; // O '../styles/PlotViewer.css' si ahí están los estilos\r\n\r\n// ... (isEventsPlot, isChannelsPlot, isBrainVizDict functions remain the same) ...\r\n\r\nfunction PlotViewer({ fileName, plotData }) {\r\n  const [expandedImage, setExpandedImage] = useState(null);\r\n\r\n  if (!plotData || Object.keys(plotData).length === 0) {\r\n    return null; // Return null or some placeholder if no data\r\n  }\r\n\r\n  const hasError = plotData.error || plotData.message?.includes('error');\r\n  const allPlots = plotData.plots || plotData; // Use plots if nested, otherwise assume top level\r\n  const features = plotData.features || {}; // Handle features if present\r\n  const interpretation = plotData.interpretation || {}; // Handle interpretation if present\r\n  const temporalValidation = plotData.temporal_validation || null; // Handle temporal validation\r\n\r\n  const handleImageClick = (base64Image, name) => {\r\n    setExpandedImage({ src: base64Image, name: name });\r\n  };\r\n\r\n  const handleCloseExpanded = (e) => {\r\n    e.stopPropagation();\r\n    setExpandedImage(null);\r\n  };\r\n\r\n  // Helper function to check if a plot name indicates an events plot\r\n  const isEventsPlot = (plotName) => {\r\n    return plotName.toLowerCase().includes('event') &&\r\n           !plotName.toLowerCase().includes('activation'); // Exclude activation plots\r\n  };\r\n\r\n  // Helper function to check if a plot name indicates a channels plot\r\n  const isChannelsPlot = (plotName) => {\r\n    return plotName.toLowerCase().includes('channel') &&\r\n          !plotName.toLowerCase().includes('visualization'); // Exclude old activation plots if any\r\n  };\r\n\r\n  // Function to check for the brain visualizations dictionary\r\n  const isBrainVizDict = (plotName) => {\r\n    return plotName === 'brain_visualizations_by_event';\r\n  };\r\n\r\n  return (\r\n    <div className=\"plot-viewer\">\r\n      <h3 className=\"file-heading\">{fileName}</h3>\r\n\r\n      {/* Display Temporal Validation Results if available */}\r\n      {temporalValidation && (\r\n        <div className=\"temporal-validation-results plot-item plot-item-medium\"> {/* Added plot-item classes */}\r\n          <h4>Temporal Bias Validation Results</h4>\r\n          <p>Validation Score (AUC): {temporalValidation.validation_score?.toFixed(3) ?? 'N/A'}</p>\r\n          <p>P-value: {temporalValidation.p_value?.toFixed(5) ?? 'N/A'}</p>\r\n          <p>Conclusion: {temporalValidation.message ?? 'No conclusion available.'}</p>\r\n          {temporalValidation.plot && (\r\n            <> {/* Use Fragment to group */}\r\n              <h5>Feature Performance vs. Time</h5>\r\n              <div className=\"scrollable-plot-container\">\r\n                 <img\r\n                   src={`data:image/png;base64,${temporalValidation.plot}`}\r\n                   alt=\"Temporal Validation Plot\"\r\n                   className=\"plot-image\"\r\n                   style={{ maxWidth: 'none', height: 'auto', cursor: 'pointer' }} // Allow natural size, add cursor\r\n                   onClick={() => handleImageClick(temporalValidation.plot, 'Temporal Validation Plot')}\r\n                 />\r\n              </div>\r\n              <div className=\"scroll-hint\">Scroll horizontally if the plot is too wide.</div>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {hasError && (\r\n        <div className=\"error-message\">\r\n          <p>{plotData.error || plotData.message || \"Analysis could not be completed\"}</p>\r\n          {/* Optionally show events plot even on error, using scrollable container */}\r\n          {allPlots.events && (\r\n             <div className=\"plot-item plot-item-large\">\r\n               <h4>Events Timeline (Error Context)</h4>\r\n               {/* --- FIX: Use Scrollable Container --- */}\r\n               <div className=\"scrollable-plot-container\">\r\n                 <img\r\n                   src={`data:image/png;base64,${allPlots.events}`}\r\n                   alt=\"Events Timeline\"\r\n                   className=\"plot-image\"\r\n                   // Let CSS handle sizing, only add essential inline styles\r\n                   style={{ maxWidth: 'none', height: 'auto' }}\r\n                 />\r\n               </div>\r\n               <div className=\"scroll-hint\">Scroll horizontally to view the full timeline.</div>\r\n               {/* --- END FIX --- */}\r\n             </div>\r\n           )}\r\n        </div>\r\n      )}\r\n\r\n      {plotData.message && !hasError && !temporalValidation && (\r\n        <div className=\"analysis-message\">\r\n          <p>{plotData.message}</p>\r\n        </div>\r\n      )}\r\n\r\n      {!hasError && (\r\n        <div className=\"plots-container\">\r\n          {/* Display events plots first and larger, using scrollable container */}\r\n          {Object.entries(allPlots)\r\n            .filter(([plotName, base64Image]) => base64Image && typeof base64Image === 'string' && isEventsPlot(plotName))\r\n            .map(([plotName, base64Image]) => (\r\n              <div key={plotName} className=\"plot-item plot-item-large\">\r\n                <h4>{formatPlotName(plotName)}</h4>\r\n                {/* --- FIX: Use Scrollable Container --- */}\r\n                <div className=\"scrollable-plot-container\">\r\n                  <img\r\n                    src={`data:image/png;base64,${base64Image}`}\r\n                    alt={`${plotName} plot`}\r\n                    className=\"plot-image\"\r\n                    onClick={() => handleImageClick(base64Image, formatPlotName(plotName))}\r\n                    // Let CSS handle sizing, only add essential inline styles\r\n                    style={{ cursor: 'pointer', maxWidth: 'none', height: '400px' }}\r\n                  />\r\n                </div>\r\n                <div className=\"scroll-hint\">Scroll horizontally to view the full timeline.</div>\r\n                {/* --- END FIX --- */}\r\n              </div>\r\n            ))}\r\n\r\n          {/* Display channels plot with scrollable container */}\r\n          {Object.entries(allPlots)\r\n            .filter(([plotName, base64Image]) => base64Image && typeof base64Image === 'string' && isChannelsPlot(plotName))\r\n            .map(([plotName, base64Image]) => (\r\n              <div key={plotName} className=\"plot-item plot-item-large\">\r\n                <h4>{formatPlotName(plotName)}</h4>\r\n                <div className=\"scrollable-channels-container\">\r\n                  <div className=\"image-container image-container-channels\">\r\n                    <img\r\n                      src={`data:image/png;base64,${base64Image}`}\r\n                      alt={`${plotName} plot`}\r\n                      className=\"plot-image plot-image-channels\"\r\n                      onClick={() => handleImageClick(base64Image, formatPlotName(plotName))}\r\n                      style={{ cursor: 'pointer' }} // Keep cursor pointer\r\n                    />\r\n                  </div>\r\n                  <div className=\"scroll-hint\">\r\n                    Scroll down to see more channels\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n          {/* Display Brain Visualizations per Event */}\r\n          {Object.entries(allPlots)\r\n            .filter(([plotName, data]) => isBrainVizDict(plotName) && data && typeof data === 'object')\r\n            .flatMap(([_, eventPlots]) =>\r\n              Object.entries(eventPlots)\r\n                .filter(([eventName, base64Image]) => base64Image && typeof base64Image === 'string')\r\n                .map(([eventName, base64Image]) => {\r\n                  // Format title for brain maps\r\n                  const plotTitle = formatPlotName(eventName.includes('vs') ? eventName : `Brain Activation (${eventName})`);\r\n                  return (\r\n                    <div key={`brain-viz-${eventName}`} className=\"plot-item plot-item-medium\"> {/* Use medium size */}\r\n                      <h4>{plotTitle}</h4>\r\n                      <div className=\"image-container\">\r\n                        <img\r\n                          src={`data:image/png;base64,${base64Image}`}\r\n                          alt={plotTitle}\r\n                          className=\"plot-image\"\r\n                          onClick={() => handleImageClick(base64Image, plotTitle)}\r\n                          style={{ cursor: 'pointer' }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n            )}\r\n\r\n          {/* Render Feature Importance Plot if available */}\r\n          {allPlots.feature_importance && features.top_features && (\r\n            <div className=\"plot-item plot-item-medium\"> {/* Or plot-item-large */}\r\n              <h4>Feature Importance</h4>\r\n               <div className=\"scrollable-plot-container\">\r\n                  <img\r\n                    src={`data:image/png;base64,${allPlots.feature_importance}`}\r\n                    alt=\"Feature Importance Plot\"\r\n                    className=\"plot-image\"\r\n                    style={{ maxWidth: '400px', height: '300px', cursor: 'pointer' }} // Allow natural size\r\n                    onClick={() => handleImageClick(allPlots.feature_importance, 'Feature Importance')}\r\n                  />\r\n               </div>\r\n               <div className=\"scroll-hint\">Scroll horizontally if the plot is too wide.</div>\r\n               <div className=\"top-features-list\">\r\n                 <h5>Top Discriminating Features:</h5>\r\n                 <ul>\r\n                   {features.top_features.slice(0, 10).map((feature, index) => (\r\n                     <li key={index}>{feature}</li>\r\n                   ))}\r\n                 </ul>\r\n               </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Display other plots normally */}\r\n          {Object.entries(allPlots)\r\n            .filter(([plotName, data]) =>\r\n                data && typeof data === 'string' &&\r\n                !isEventsPlot(plotName) &&\r\n                !isChannelsPlot(plotName) &&\r\n                !isBrainVizDict(plotName) &&\r\n                plotName !== 'feature_importance' &&\r\n                // Add other specific plots handled elsewhere if needed\r\n                plotName !== 'average_response' &&\r\n                plotName !== 'confusion_matrix'\r\n             )\r\n            .map(([plotName, base64Image]) => (\r\n              <div key={plotName} className=\"plot-item\"> {/* Default size */}\r\n                <h4>{formatPlotName(plotName)}</h4>\r\n                <div className=\"image-container\">\r\n                  <img\r\n                    src={`data:image/png;base64,${base64Image}`}\r\n                    alt={`${plotName} plot`}\r\n                    className=\"plot-image\" // Let CSS handle max-width: 100%\r\n                    onClick={() => handleImageClick(base64Image, formatPlotName(plotName))}\r\n                    style={{ cursor: 'pointer' }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n            {/* Render Average Response and Confusion Matrix (example placement) */}\r\n             {allPlots.average_response && (\r\n                <div key=\"average_response\" className=\"plot-item plot-item-medium\">\r\n                    <h4>{formatPlotName('average_response')}</h4>\r\n                    <div className=\"image-container\">\r\n                        <img src={`data:image/png;base64,${allPlots.average_response}`} alt=\"Average Response Plot\" className=\"plot-image\" onClick={() => handleImageClick(allPlots.average_response, formatPlotName('average_response'))} style={{ cursor: 'pointer' }} />\r\n                    </div>\r\n                </div>\r\n             )}\r\n             {allPlots.confusion_matrix && (\r\n                <div key=\"confusion_matrix\" className=\"plot-item plot-item-small\">\r\n                    <h4>{formatPlotName('confusion_matrix')}</h4>\r\n                    <div className=\"image-container\">\r\n                        <img src={`data:image/png;base64,${allPlots.confusion_matrix}`} alt=\"Confusion Matrix\" className=\"plot-image\" onClick={() => handleImageClick(allPlots.confusion_matrix, formatPlotName('confusion_matrix'))} style={{ cursor: 'pointer' }} />\r\n                    </div>\r\n                </div>\r\n             )}\r\n\r\n        </div>\r\n      )}\r\n\r\n      {/* Interpretation Section */}\r\n       {interpretation && Object.keys(interpretation).length > 0 && !hasError && (\r\n         <div className=\"interpretation-section\">\r\n           <h4>Interpretation</h4>\r\n           {interpretation.general && <p><strong>General:</strong> {interpretation.general}</p>}\r\n           {interpretation.classification && <p><strong>Classification:</strong> {interpretation.classification}</p>}\r\n           {interpretation.features && <p><strong>Features:</strong> {interpretation.features}</p>}\r\n           {interpretation.comparison && <p><strong>Comparison:</strong> {interpretation.comparison}</p>}\r\n         </div>\r\n       )}\r\n\r\n\r\n      {/* Modal for expanded image */}\r\n      {expandedImage && (\r\n        <div className=\"expanded-image-overlay\" onClick={() => setExpandedImage(null)}>\r\n          <div className=\"expanded-image-container\">\r\n            <div className=\"expanded-image-header\">\r\n              <h3>{expandedImage.name}</h3>\r\n              <button className=\"close-button\" onClick={handleCloseExpanded}>\r\n                &times;\r\n              </button>\r\n            </div>\r\n            <img\r\n              src={`data:image/png;base64,${expandedImage.src}`}\r\n              alt=\"Expanded view\"\r\n              className=\"expanded-image\"\r\n              onClick={(e) => e.stopPropagation()}\r\n              style={{ maxWidth: '95%', maxHeight: '85vh', objectFit: 'contain' }}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Updated formatPlotName function (more robust)\r\nfunction formatPlotName(name) {\r\n  // Handle specific known keys first\r\n  const knownNames = {\r\n      'average_response': 'Average Hemodynamic Response',\r\n      'confusion_matrix': 'Confusion Matrix',\r\n      'feature_importance': 'Feature Importance',\r\n      'events': 'Events Timeline',\r\n      'channels': 'Channels Overview',\r\n      'Left_vs_Right': 'Activation Difference (Left vs Right)' // Handle difference plot specifically\r\n      // Add more specific mappings if needed\r\n  };\r\n\r\n  if (knownNames[name]) {\r\n      return knownNames[name];\r\n  }\r\n\r\n  // Handle brain activation patterns like \"Brain Activation (Rest)\"\r\n  if (name.startsWith('Brain Activation (')) {\r\n      return name; // Assume already formatted\r\n  }\r\n\r\n  // General formatting for snake_case or camelCase\r\n  return name\r\n    .replace(/_/g, ' ') // Replace underscores with spaces\r\n    .replace(/([A-Z])/g, ' $1') // Add space before capital letters (for camelCase)\r\n    .replace(/(\\d+)/g, ' $1') // Add space before numbers if needed\r\n    .replace(/ vs /g, ' vs ') // Ensure ' vs ' keeps spaces\r\n    .trim()\r\n    .split(' ')\r\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1)) // Capitalize each word (handle lowercase correctly)\r\n    .join(' ');\r\n}\r\n\r\n\r\nexport default PlotViewer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}