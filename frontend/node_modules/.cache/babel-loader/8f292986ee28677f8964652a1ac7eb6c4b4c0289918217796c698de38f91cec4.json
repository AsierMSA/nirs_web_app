{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive - Universidad de Deusto\\\\Documentos\\\\nirs_web_app\\\\frontend\\\\src\\\\components\\\\FileUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { uploadFile } from '../api/apiService';\nimport '../styles/components.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUploader({\n  onFileUpload\n}) {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      // Check if file has a valid extension immediately\n      const validExtensions = ['.fif', '.gz'];\n      const fileNameLower = selectedFile.name.toLowerCase();\n      const hasValidExtension = validExtensions.some(ext => fileNameLower.endsWith(ext)) || fileNameLower.endsWith('fif.gz');\n      if (!hasValidExtension) {\n        setError('Invalid file type. Only .fif or .fif.gz files are allowed.');\n        setFile(null); // Clear the invalid file\n        // Reset file input visually\n        if (e.target) e.target.value = null;\n      } else {\n        setFile(selectedFile);\n        setError(null);\n      }\n    } else {\n      // Handle case where user cancels file selection\n      setFile(null);\n      setError(null);\n    }\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      setError('Please select a valid file first');\n      return;\n    }\n\n    // Validation is now done in handleFileChange, but double-check just in case\n    const validExtensions = ['.fif', '.gz'];\n    const fileNameLower = file.name.toLowerCase();\n    const hasValidExtension = validExtensions.some(ext => fileNameLower.endsWith(ext)) || fileNameLower.endsWith('fif.gz');\n    if (!hasValidExtension) {\n      setError('Invalid file type. Only .fif or .fif.gz files are allowed.');\n      return;\n    }\n    setUploading(true);\n    setError(null);\n    try {\n      const uploadedFile = await uploadFile(file);\n      setFile(null); // Clear file state after successful upload\n      onFileUpload(uploadedFile);\n      // Reset file input visually - might not be strictly necessary if state is cleared\n      const inputElement = document.getElementById('file-input');\n      if (inputElement) inputElement.value = null;\n    } catch (err) {\n      console.error('Upload error:', err);\n      setError(err.message || 'Failed to upload file'); // Show more specific error\n    } finally {\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-uploader\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file-input\",\n        type: \"file\",\n        onChange: handleFileChange,\n        accept: \".fif,.gz,.fif.gz\" // Be more specific with accept\n        ,\n        disabled: uploading,\n        className: \"file-input-hidden\" // Class to hide it\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-input\",\n        className: `file-input-label ${uploading ? 'disabled' : ''}`,\n        children: \"Choose File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"file-name-display\",\n        children: file ? `${file.name} (${Math.round(file.size / 1024)} KB)` : 'No file chosen'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-button\",\n        onClick: handleUpload,\n        disabled: !file || uploading,\n        children: uploading ? 'Uploading...' : 'Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUploader, \"P4uK+CGFy3V5VhPtt4YZdffEkXc=\");\n_c = FileUploader;\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useState","uploadFile","jsxDEV","_jsxDEV","FileUploader","onFileUpload","_s","file","setFile","uploading","setUploading","error","setError","handleFileChange","e","selectedFile","target","files","validExtensions","fileNameLower","name","toLowerCase","hasValidExtension","some","ext","endsWith","value","handleUpload","uploadedFile","inputElement","document","getElementById","err","console","message","className","children","id","type","onChange","accept","disabled","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","Math","round","size","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PC/OneDrive - Universidad de Deusto/Documentos/nirs_web_app/frontend/src/components/FileUploader.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { uploadFile } from '../api/apiService';\r\nimport '../styles/components.css';\r\n\r\nfunction FileUploader({ onFileUpload }) {\r\n  const [file, setFile] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if (selectedFile) {\r\n      // Check if file has a valid extension immediately\r\n      const validExtensions = ['.fif', '.gz'];\r\n      const fileNameLower = selectedFile.name.toLowerCase();\r\n      const hasValidExtension = validExtensions.some(ext =>\r\n        fileNameLower.endsWith(ext)\r\n      ) || fileNameLower.endsWith('fif.gz');\r\n\r\n      if (!hasValidExtension) {\r\n        setError('Invalid file type. Only .fif or .fif.gz files are allowed.');\r\n        setFile(null); // Clear the invalid file\r\n        // Reset file input visually\r\n        if (e.target) e.target.value = null;\r\n      } else {\r\n        setFile(selectedFile);\r\n        setError(null);\r\n      }\r\n    } else {\r\n      // Handle case where user cancels file selection\r\n      setFile(null);\r\n      setError(null);\r\n    }\r\n  };\r\n\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) {\r\n      setError('Please select a valid file first');\r\n      return;\r\n    }\r\n\r\n    // Validation is now done in handleFileChange, but double-check just in case\r\n    const validExtensions = ['.fif', '.gz'];\r\n    const fileNameLower = file.name.toLowerCase();\r\n    const hasValidExtension = validExtensions.some(ext =>\r\n      fileNameLower.endsWith(ext)\r\n    ) || fileNameLower.endsWith('fif.gz');\r\n\r\n    if (!hasValidExtension) {\r\n      setError('Invalid file type. Only .fif or .fif.gz files are allowed.');\r\n      return;\r\n    }\r\n\r\n\r\n    setUploading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const uploadedFile = await uploadFile(file);\r\n      setFile(null); // Clear file state after successful upload\r\n      onFileUpload(uploadedFile);\r\n      // Reset file input visually - might not be strictly necessary if state is cleared\r\n      const inputElement = document.getElementById('file-input');\r\n      if (inputElement) inputElement.value = null;\r\n    } catch (err) {\r\n      console.error('Upload error:', err);\r\n      setError(err.message || 'Failed to upload file'); // Show more specific error\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-uploader\">\r\n      <div className=\"file-input-container\">\r\n        {/* Visually hidden file input */}\r\n        <input\r\n          id=\"file-input\"\r\n          type=\"file\"\r\n          onChange={handleFileChange}\r\n          accept=\".fif,.gz,.fif.gz\" // Be more specific with accept\r\n          disabled={uploading}\r\n          className=\"file-input-hidden\" // Class to hide it\r\n        />\r\n        {/* Styled label acting as the button */}\r\n        <label htmlFor=\"file-input\" className={`file-input-label ${uploading ? 'disabled' : ''}`}>\r\n          Choose File\r\n        </label>\r\n        {/* Display selected file name or placeholder */}\r\n        <span className=\"file-name-display\">\r\n          {file ? `${file.name} (${Math.round(file.size / 1024)} KB)` : 'No file chosen'}\r\n        </span>\r\n        {/* Upload button remains separate */}\r\n        <button\r\n          className=\"upload-button\"\r\n          onClick={handleUpload}\r\n          disabled={!file || uploading}\r\n        >\r\n          {uploading ? 'Uploading...' : 'Upload'}\r\n        </button>\r\n      </div>\r\n\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUploader;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}