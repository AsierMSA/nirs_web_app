{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive - Universidad de Deusto\\\\Documentos\\\\nirs_web_app\\\\frontend\\\\src\\\\components\\\\PlotViewer.js\";\nimport React from 'react';\nimport '../styles/components.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlotViewer({\n  fileName,\n  plotData\n}) {\n  var _plotData$message;\n  if (!plotData || Object.keys(plotData).length === 0) {\n    return null;\n  }\n\n  // If there's an error message, display it with any diagnostic plots\n  const hasError = plotData.error || ((_plotData$message = plotData.message) === null || _plotData$message === void 0 ? void 0 : _plotData$message.includes('error'));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plot-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"file-heading\",\n      children: fileName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: plotData.error || \"Analysis could not be completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), plotData.message && !hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: plotData.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plots-container\",\n      children: [Object.entries(plotData.plots || {}).map(([plotName, base64Image]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plot-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: formatPlotName(plotName)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/png;base64,${base64Image}`,\n            alt: `${plotName} plot`,\n            className: \"plot-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, plotName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)), !plotData.plots && Object.entries(plotData).filter(([key, value]) => typeof value === 'string' && value.startsWith('iVBORw')).map(([plotName, base64Image]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plot-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: formatPlotName(plotName)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/png;base64,${base64Image}`,\n            alt: `${plotName} plot`,\n            className: \"plot-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, plotName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = PlotViewer;\nfunction formatPlotName(name) {\n  // Convert snake_case to Title Case\n  return name.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n}\nexport default PlotViewer;\nvar _c;\n$RefreshReg$(_c, \"PlotViewer\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PlotViewer","fileName","plotData","_plotData$message","Object","keys","length","hasError","error","message","includes","className","children","_jsxFileName","lineNumber","columnNumber","entries","plots","map","plotName","base64Image","formatPlotName","src","alt","filter","key","value","startsWith","_c","name","split","word","charAt","toUpperCase","slice","join","$RefreshReg$"],"sources":["C:/Users/PC/OneDrive - Universidad de Deusto/Documentos/nirs_web_app/frontend/src/components/PlotViewer.js"],"sourcesContent":["import React from 'react';\r\nimport '../styles/components.css';\r\n\r\nfunction PlotViewer({ fileName, plotData }) {\r\n  if (!plotData || Object.keys(plotData).length === 0) {\r\n    return null;\r\n  }\r\n\r\n  // If there's an error message, display it with any diagnostic plots\r\n  const hasError = plotData.error || plotData.message?.includes('error');\r\n  \r\n  return (\r\n    <div className=\"plot-viewer\">\r\n      <h3 className=\"file-heading\">{fileName}</h3>\r\n      \r\n      {hasError && (\r\n        <div className=\"error-message\">\r\n          <p>{plotData.error || \"Analysis could not be completed\"}</p>\r\n        </div>\r\n      )}\r\n      \r\n      {plotData.message && !hasError && (\r\n        <div className=\"analysis-message\">\r\n          <p>{plotData.message}</p>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"plots-container\">\r\n        {Object.entries(plotData.plots || {}).map(([plotName, base64Image]) => (\r\n          <div key={plotName} className=\"plot-item\">\r\n            <h4>{formatPlotName(plotName)}</h4>\r\n            <div className=\"image-container\">\r\n              <img \r\n                src={`data:image/png;base64,${base64Image}`} \r\n                alt={`${plotName} plot`}\r\n                className=\"plot-image\"\r\n              />\r\n            </div>\r\n          </div>\r\n        ))}\r\n        \r\n        {/* Handle case where plots aren't nested in a plots object */}\r\n        {!plotData.plots && Object.entries(plotData).filter(([key, value]) => \r\n          typeof value === 'string' && value.startsWith('iVBORw')\r\n        ).map(([plotName, base64Image]) => (\r\n          <div key={plotName} className=\"plot-item\">\r\n            <h4>{formatPlotName(plotName)}</h4>\r\n            <div className=\"image-container\">\r\n              <img \r\n                src={`data:image/png;base64,${base64Image}`} \r\n                alt={`${plotName} plot`}\r\n                className=\"plot-image\"\r\n              />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction formatPlotName(name) {\r\n  // Convert snake_case to Title Case\r\n  return name\r\n    .split('_')\r\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n    .join(' ');\r\n}\r\n\r\nexport default PlotViewer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}