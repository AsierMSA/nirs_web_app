{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive - Universidad de Deusto\\\\Documentos\\\\nirs_web_app\\\\frontend\\\\src\\\\components\\\\PlotViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/components.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlotViewer({\n  fileName,\n  plotData\n}) {\n  _s();\n  var _plotData$message;\n  // State to track which image is expanded (null means no image is expanded)\n  const [expandedImage, setExpandedImage] = useState(null);\n  if (!plotData || Object.keys(plotData).length === 0) {\n    return null;\n  }\n\n  // Function to handle image click to expand/collapse\n  const handleImageClick = (base64Image, plotName) => {\n    if (expandedImage && expandedImage.src === base64Image) {\n      // If clicking the currently expanded image, collapse it\n      setExpandedImage(null);\n    } else {\n      // Otherwise expand the clicked image\n      setExpandedImage({\n        src: base64Image,\n        name: plotName\n      });\n    }\n  };\n\n  // If there's an error message, display it with any diagnostic plots\n  const hasError = plotData.error || ((_plotData$message = plotData.message) === null || _plotData$message === void 0 ? void 0 : _plotData$message.includes('error'));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plot-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"file-heading\",\n      children: fileName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: plotData.error || \"Analysis could not be completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), plotData.message && !hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: plotData.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plots-container\",\n      children: [Object.entries(plotData.plots || {}).map(([plotName, base64Image]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plot-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: formatPlotName(plotName)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/png;base64,${base64Image}`,\n            alt: `${plotName} plot`,\n            className: \"plot-image\",\n            onClick: () => handleImageClick(base64Image, formatPlotName(plotName)),\n            style: {\n              cursor: 'pointer'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, plotName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)), !plotData.plots && Object.entries(plotData).filter(([key, value]) => typeof value === 'string' && value.startsWith('iVBORw')).map(([plotName, base64Image]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plot-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: formatPlotName(plotName)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/png;base64,${base64Image}`,\n            alt: `${plotName} plot`,\n            className: \"plot-image\",\n            onClick: () => handleImageClick(base64Image, formatPlotName(plotName)),\n            style: {\n              cursor: 'pointer'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, plotName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), expandedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expanded-image-overlay\",\n      onClick: () => setExpandedImage(null),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expanded-image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expanded-image-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: expandedImage.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-button\",\n            onClick: e => {\n              e.stopPropagation();\n              setExpandedImage(null);\n            },\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `data:image/png;base64,${expandedImage.src}`,\n          alt: \"Expanded view\",\n          className: \"expanded-image\",\n          onClick: e => e.stopPropagation()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(PlotViewer, \"+U8yK6q4A/WC0g7bofNq42VL6OQ=\");\n_c = PlotViewer;\nfunction formatPlotName(name) {\n  // Convert snake_case to Title Case\n  return name.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n}\nexport default PlotViewer;\nvar _c;\n$RefreshReg$(_c, \"PlotViewer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PlotViewer","fileName","plotData","_s","_plotData$message","expandedImage","setExpandedImage","Object","keys","length","handleImageClick","base64Image","plotName","src","name","hasError","error","message","includes","className","children","_jsxFileName","lineNumber","columnNumber","entries","plots","map","formatPlotName","alt","onClick","style","cursor","filter","key","value","startsWith","e","stopPropagation","_c","split","word","charAt","toUpperCase","slice","join","$RefreshReg$"],"sources":["C:/Users/PC/OneDrive - Universidad de Deusto/Documentos/nirs_web_app/frontend/src/components/PlotViewer.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/components.css';\r\n\r\nfunction PlotViewer({ fileName, plotData }) {\r\n  // State to track which image is expanded (null means no image is expanded)\r\n  const [expandedImage, setExpandedImage] = useState(null);\r\n  \r\n  if (!plotData || Object.keys(plotData).length === 0) {\r\n    return null;\r\n  }\r\n\r\n  // Function to handle image click to expand/collapse\r\n  const handleImageClick = (base64Image, plotName) => {\r\n    if (expandedImage && expandedImage.src === base64Image) {\r\n      // If clicking the currently expanded image, collapse it\r\n      setExpandedImage(null);\r\n    } else {\r\n      // Otherwise expand the clicked image\r\n      setExpandedImage({ src: base64Image, name: plotName });\r\n    }\r\n  };\r\n\r\n  // If there's an error message, display it with any diagnostic plots\r\n  const hasError = plotData.error || plotData.message?.includes('error');\r\n  \r\n  return (\r\n    <div className=\"plot-viewer\">\r\n      <h3 className=\"file-heading\">{fileName}</h3>\r\n      \r\n      {hasError && (\r\n        <div className=\"error-message\">\r\n          <p>{plotData.error || \"Analysis could not be completed\"}</p>\r\n        </div>\r\n      )}\r\n      \r\n      {plotData.message && !hasError && (\r\n        <div className=\"analysis-message\">\r\n          <p>{plotData.message}</p>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"plots-container\">\r\n        {Object.entries(plotData.plots || {}).map(([plotName, base64Image]) => (\r\n          <div key={plotName} className=\"plot-item\">\r\n            <h4>{formatPlotName(plotName)}</h4>\r\n            <div className=\"image-container\">\r\n              <img \r\n                src={`data:image/png;base64,${base64Image}`} \r\n                alt={`${plotName} plot`}\r\n                className=\"plot-image\"\r\n                onClick={() => handleImageClick(base64Image, formatPlotName(plotName))}\r\n                style={{ cursor: 'pointer' }}\r\n              />\r\n            </div>\r\n          </div>\r\n        ))}\r\n        \r\n        {/* Handle case where plots aren't nested in a plots object */}\r\n        {!plotData.plots && Object.entries(plotData).filter(([key, value]) => \r\n          typeof value === 'string' && value.startsWith('iVBORw')\r\n        ).map(([plotName, base64Image]) => (\r\n          <div key={plotName} className=\"plot-item\">\r\n            <h4>{formatPlotName(plotName)}</h4>\r\n            <div className=\"image-container\">\r\n              <img \r\n                src={`data:image/png;base64,${base64Image}`} \r\n                alt={`${plotName} plot`}\r\n                className=\"plot-image\"\r\n                onClick={() => handleImageClick(base64Image, formatPlotName(plotName))}\r\n                style={{ cursor: 'pointer' }}\r\n              />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      \r\n      {/* Modal for expanded image */}\r\n      {expandedImage && (\r\n        <div className=\"expanded-image-overlay\" onClick={() => setExpandedImage(null)}>\r\n          <div className=\"expanded-image-container\">\r\n            <div className=\"expanded-image-header\">\r\n              <h3>{expandedImage.name}</h3>\r\n              <button className=\"close-button\" onClick={(e) => {\r\n                e.stopPropagation();\r\n                setExpandedImage(null);\r\n              }}>\r\n                &times;\r\n              </button>\r\n            </div>\r\n            <img \r\n              src={`data:image/png;base64,${expandedImage.src}`} \r\n              alt=\"Expanded view\" \r\n              className=\"expanded-image\"\r\n              onClick={(e) => e.stopPropagation()}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction formatPlotName(name) {\r\n  // Convert snake_case to Title Case\r\n  return name\r\n    .split('_')\r\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n    .join(' ');\r\n}\r\n\r\nexport default PlotViewer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}