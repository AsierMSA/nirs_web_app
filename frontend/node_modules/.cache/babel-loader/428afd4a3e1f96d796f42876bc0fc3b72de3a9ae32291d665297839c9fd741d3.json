{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive - Universidad de Deusto\\\\Documentos\\\\nirs_web_app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FileUploader from './components/FileUploader';\nimport FileList from './components/FileList';\nimport ActivitySelector from './components/ActivitySelector';\nimport PlotViewer from './components/PlotViewer';\nimport { fetchAvailableFiles, analyzeFile } from './api/apiService';\nimport './styles/App.css';\nimport InterpretationViewer from './components/InterpretationViewer';\nimport FeatureImportanceViewer from './components/FeatureImportanceViewer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State management\n  const [files, setFiles] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [activities, setActivities] = useState({});\n  const [selectedActivities, setSelectedActivities] = useState({});\n  const [plots, setPlots] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Load available files on component mount\n  useEffect(() => {\n    const loadFiles = async () => {\n      try {\n        const availableFiles = await fetchAvailableFiles();\n        setFiles(availableFiles);\n      } catch (err) {\n        console.error('Error loading files:', err);\n        setError('Failed to load available files');\n      }\n    };\n    loadFiles();\n  }, []);\n\n  // Handle file selection\n  const handleFileSelect = fileId => {\n    const isSelected = selectedFiles.includes(fileId);\n    if (isSelected) {\n      setSelectedFiles(selectedFiles.filter(id => id !== fileId));\n      setSelectedActivities(prev => {\n        const updated = {\n          ...prev\n        };\n        delete updated[fileId];\n        return updated;\n      });\n    } else {\n      setSelectedFiles([...selectedFiles, fileId]);\n    }\n  };\n\n  // Handle successful file upload\n  const handleFileUpload = uploadedFile => {\n    setFiles(prev => [...prev, uploadedFile]);\n  };\n\n  // Handle activity selection\n  const handleActivitySelect = (fileId, selectedActivitiesList) => {\n    setSelectedActivities(prev => ({\n      ...prev,\n      [fileId]: selectedActivitiesList\n    }));\n  };\n\n  // Handle analysis request\n  const handleAnalyze = async () => {\n    setLoading(true);\n    setError(null);\n    setPlots({});\n    try {\n      const results = {};\n      for (const fileId of selectedFiles) {\n        if (selectedActivities[fileId] && selectedActivities[fileId].length > 0) {\n          var _fileResult$features, _fileResult$features2, _fileResult$features3;\n          const fileResult = await analyzeFile(fileId, selectedActivities[fileId]);\n          console.log(\"Top features recibidos del backend:\", (_fileResult$features = fileResult.features) === null || _fileResult$features === void 0 ? void 0 : _fileResult$features.top_features);\n\n          // Asegurar que la topFeature esté disponible antes de añadirla a resultados\n          if (((_fileResult$features2 = fileResult.features) === null || _fileResult$features2 === void 0 ? void 0 : (_fileResult$features3 = _fileResult$features2.top_features) === null || _fileResult$features3 === void 0 ? void 0 : _fileResult$features3.length) > 0) {\n            var _fileResult$interpret, _fileResult$interpret2, _fileResult$interpret3;\n            // Forzar que esta sea la única feature_explanation para que no haya confusión\n            const topFeature = fileResult.features.top_features[0];\n\n            // Si no hay interpretationData, inicializarla\n            if (!fileResult.interpretation) {\n              fileResult.interpretation = {\n                region_descriptions: {\n                  'prefrontal': {\n                    'function': 'Executive functions and decision making',\n                    'examples': 'Planning, decision making, response inhibition',\n                    'anatomical_areas': 'Dorsolateral prefrontal cortex, orbitofrontal cortex'\n                  },\n                  'central_frontal': {\n                    'function': 'Motor control and planning',\n                    'examples': 'Movement planning, motor sequences',\n                    'anatomical_areas': 'Supplementary motor area, premotor cortex'\n                  },\n                  'lateral_frontal': {\n                    'function': 'Language processing and working memory',\n                    'examples': 'Verbal tasks, short-term verbal memory',\n                    'anatomical_areas': \"Broca's area, ventrolateral prefrontal cortex\"\n                  }\n                },\n                feature_explanations: {},\n                event_descriptions: {}\n              };\n            }\n\n            // Asegurar que feature_explanations exista\n            if (!fileResult.interpretation.feature_explanations) {\n              fileResult.interpretation.feature_explanations = {};\n            }\n\n            // SOLO agregar la explicación para la característica más importante\n            fileResult.interpretation.feature_explanations = {\n              [topFeature]: {\n                'region': topFeature.split('_')[0] || 'unknown',\n                'region_function': ((_fileResult$interpret = fileResult.interpretation) === null || _fileResult$interpret === void 0 ? void 0 : (_fileResult$interpret2 = _fileResult$interpret.region_descriptions) === null || _fileResult$interpret2 === void 0 ? void 0 : (_fileResult$interpret3 = _fileResult$interpret2[topFeature.split('_')[0]]) === null || _fileResult$interpret3 === void 0 ? void 0 : _fileResult$interpret3.function) || 'Executive functions and cognitive processing',\n                'measure_description': `Most important feature from machine learning analysis (F-score)`,\n                'wavelength_meaning': topFeature.includes('850') ? '850nm - primarily sensitive to oxygenated hemoglobin' : '760nm - primarily sensitive to deoxygenated hemoglobin'\n              }\n            };\n            console.log(\"✅ Prepared interpretation data for top feature:\", topFeature);\n            console.log(\"Feature explanations:\", fileResult.interpretation.feature_explanations);\n          }\n          results[fileId] = fileResult;\n        }\n      }\n      setPlots(results);\n    } catch (err) {\n      console.error('Analysis error:', err);\n      setError('An error occurred during analysis');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"NIRS Analysis Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"file-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"NIRS Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n          onFileUpload: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FileList, {\n          files: files,\n          selectedFiles: selectedFiles,\n          onSelectFile: handleFileSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"activity-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Activities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), selectedFiles.length > 0 ? selectedFiles.map(fileId => {\n          var _files$find;\n          return /*#__PURE__*/_jsxDEV(ActivitySelector, {\n            fileId: fileId,\n            fileName: ((_files$find = files.find(file => file.id === fileId)) === null || _files$find === void 0 ? void 0 : _files$find.name) || fileId,\n            onSelectActivities: activities => handleActivitySelect(fileId, activities)\n          }, fileId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"info-text\",\n          children: \"Select files to view available activities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), selectedFiles.length > 0 && Object.keys(selectedActivities).length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"analyze-button\",\n          onClick: handleAnalyze,\n          disabled: loading,\n          children: loading ? 'Analyzing...' : 'Analyze Selected Data'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"results-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Analysis Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), Object.entries(plots).map(([fileId, plotData]) => {\n          var _files$find2, _plotData$plots, _plotData$features, _plotData$features2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-container\",\n            children: [/*#__PURE__*/_jsxDEV(PlotViewer, {\n              fileName: ((_files$find2 = files.find(file => file.id === fileId)) === null || _files$find2 === void 0 ? void 0 : _files$find2.name) || fileId,\n              plotData: plotData\n            }, `plot-${fileId}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), ((_plotData$plots = plotData.plots) === null || _plotData$plots === void 0 ? void 0 : _plotData$plots.feature_importance) && ((_plotData$features = plotData.features) === null || _plotData$features === void 0 ? void 0 : _plotData$features.top_features) && /*#__PURE__*/_jsxDEV(FeatureImportanceViewer, {\n              featureImportanceData: plotData.plots.feature_importance,\n              topFeatures: plotData.features.top_features\n            }, `feat-imp-${fileId}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InterpretationViewer, {\n              interpretationData: plotData.interpretation || {},\n              topFeatures: ((_plotData$features2 = plotData.features) === null || _plotData$features2 === void 0 ? void 0 : _plotData$features2.top_features) || []\n            }, `interp-${fileId}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 13\n            }, this)]\n          }, fileId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"w83IYmaJk6rgD1GlN6l9Mb9Kldc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FileUploader","FileList","ActivitySelector","PlotViewer","fetchAvailableFiles","analyzeFile","InterpretationViewer","FeatureImportanceViewer","jsxDEV","_jsxDEV","App","_s","files","setFiles","selectedFiles","setSelectedFiles","activities","setActivities","selectedActivities","setSelectedActivities","plots","setPlots","loading","setLoading","error","setError","loadFiles","availableFiles","err","console","handleFileSelect","fileId","isSelected","includes","filter","id","prev","updated","handleFileUpload","uploadedFile","handleActivitySelect","selectedActivitiesList","handleAnalyze","results","length","_fileResult$features","_fileResult$features2","_fileResult$features3","fileResult","log","features","top_features","_fileResult$interpret","_fileResult$interpret2","_fileResult$interpret3","topFeature","interpretation","region_descriptions","feature_explanations","event_descriptions","split","function","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFileUpload","onSelectFile","map","_files$find","find","file","name","onSelectActivities","Object","keys","onClick","disabled","entries","plotData","_files$find2","_plotData$plots","_plotData$features","_plotData$features2","feature_importance","featureImportanceData","topFeatures","interpretationData","_c","$RefreshReg$"],"sources":["C:/Users/PC/OneDrive - Universidad de Deusto/Documentos/nirs_web_app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FileUploader from './components/FileUploader';\r\nimport FileList from './components/FileList';\r\nimport ActivitySelector from './components/ActivitySelector';\r\nimport PlotViewer from './components/PlotViewer';\r\nimport { fetchAvailableFiles, analyzeFile } from './api/apiService';\r\nimport './styles/App.css';\r\nimport InterpretationViewer from './components/InterpretationViewer';\r\nimport FeatureImportanceViewer from './components/FeatureImportanceViewer';\r\nfunction App() {\r\n  // State management\r\n  const [files, setFiles] = useState([]);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [activities, setActivities] = useState({});\r\n  const [selectedActivities, setSelectedActivities] = useState({});\r\n  const [plots, setPlots] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Load available files on component mount\r\n  useEffect(() => {\r\n    const loadFiles = async () => {\r\n      try {\r\n        const availableFiles = await fetchAvailableFiles();\r\n        setFiles(availableFiles);\r\n      } catch (err) {\r\n        console.error('Error loading files:', err);\r\n        setError('Failed to load available files');\r\n      }\r\n    };\r\n    \r\n    loadFiles();\r\n  }, []);\r\n\r\n  // Handle file selection\r\n  const handleFileSelect = (fileId) => {\r\n    const isSelected = selectedFiles.includes(fileId);\r\n    \r\n    if (isSelected) {\r\n      setSelectedFiles(selectedFiles.filter(id => id !== fileId));\r\n      setSelectedActivities(prev => {\r\n        const updated = { ...prev };\r\n        delete updated[fileId];\r\n        return updated;\r\n      });\r\n    } else {\r\n      setSelectedFiles([...selectedFiles, fileId]);\r\n    }\r\n  };\r\n\r\n  // Handle successful file upload\r\n  const handleFileUpload = (uploadedFile) => {\r\n    setFiles(prev => [...prev, uploadedFile]);\r\n  };\r\n\r\n  // Handle activity selection\r\n  const handleActivitySelect = (fileId, selectedActivitiesList) => {\r\n    setSelectedActivities(prev => ({\r\n      ...prev,\r\n      [fileId]: selectedActivitiesList\r\n    }));\r\n  };\r\n\r\n  // Handle analysis request\r\n  const handleAnalyze = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    setPlots({});\r\n    \r\n    try {\r\n      const results = {};\r\n      \r\n      for (const fileId of selectedFiles) {\r\n        if (selectedActivities[fileId] && selectedActivities[fileId].length > 0) {\r\n          const fileResult = await analyzeFile(fileId, selectedActivities[fileId]);\r\n          console.log(\"Top features recibidos del backend:\", fileResult.features?.top_features);\r\n\r\n          // Asegurar que la topFeature esté disponible antes de añadirla a resultados\r\n          if (fileResult.features?.top_features?.length > 0) {\r\n            // Forzar que esta sea la única feature_explanation para que no haya confusión\r\n            const topFeature = fileResult.features.top_features[0];\r\n            \r\n            // Si no hay interpretationData, inicializarla\r\n            if (!fileResult.interpretation) {\r\n              fileResult.interpretation = {\r\n                region_descriptions: {\r\n                  'prefrontal': {\r\n                    'function': 'Executive functions and decision making',\r\n                    'examples': 'Planning, decision making, response inhibition',\r\n                    'anatomical_areas': 'Dorsolateral prefrontal cortex, orbitofrontal cortex'\r\n                  },\r\n                  'central_frontal': {\r\n                    'function': 'Motor control and planning',\r\n                    'examples': 'Movement planning, motor sequences',\r\n                    'anatomical_areas': 'Supplementary motor area, premotor cortex'\r\n                  },\r\n                  'lateral_frontal': {\r\n                    'function': 'Language processing and working memory',\r\n                    'examples': 'Verbal tasks, short-term verbal memory',\r\n                    'anatomical_areas': \"Broca's area, ventrolateral prefrontal cortex\"\r\n                  }\r\n                },\r\n                feature_explanations: {},\r\n                event_descriptions: {}\r\n              };\r\n            }\r\n            \r\n            // Asegurar que feature_explanations exista\r\n            if (!fileResult.interpretation.feature_explanations) {\r\n              fileResult.interpretation.feature_explanations = {};\r\n            }\r\n            \r\n            // SOLO agregar la explicación para la característica más importante\r\n            fileResult.interpretation.feature_explanations = {\r\n              [topFeature]: {\r\n                'region': topFeature.split('_')[0] || 'unknown',\r\n                'region_function': fileResult.interpretation?.region_descriptions?.[topFeature.split('_')[0]]?.function || \r\n                                  'Executive functions and cognitive processing',\r\n                'measure_description': `Most important feature from machine learning analysis (F-score)`,\r\n                'wavelength_meaning': topFeature.includes('850') ? \r\n                  '850nm - primarily sensitive to oxygenated hemoglobin' : \r\n                  '760nm - primarily sensitive to deoxygenated hemoglobin'\r\n              }\r\n            };\r\n            \r\n            console.log(\"✅ Prepared interpretation data for top feature:\", topFeature);\r\n            console.log(\"Feature explanations:\", fileResult.interpretation.feature_explanations);\r\n          }\r\n          \r\n          results[fileId] = fileResult;\r\n        }\r\n      }\r\n      \r\n      setPlots(results);\r\n    } catch (err) {\r\n      console.error('Analysis error:', err);\r\n      setError('An error occurred during analysis');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <header className=\"app-header\">\r\n        <h1>NIRS Analysis Dashboard</h1>\r\n      </header>\r\n      \r\n      <main className=\"app-content\">\r\n        <section className=\"file-section\">\r\n          <h2>NIRS Files</h2>\r\n          <FileUploader onFileUpload={handleFileUpload} />\r\n          <FileList \r\n            files={files} \r\n            selectedFiles={selectedFiles} \r\n            onSelectFile={handleFileSelect}\r\n          />\r\n        </section>\r\n        \r\n        <section className=\"activity-section\">\r\n          <h2>Activities</h2>\r\n          {selectedFiles.length > 0 ? (\r\n            selectedFiles.map(fileId => (\r\n              <ActivitySelector\r\n                key={fileId}\r\n                fileId={fileId}\r\n                fileName={files.find(file => file.id === fileId)?.name || fileId}\r\n                onSelectActivities={(activities) => handleActivitySelect(fileId, activities)}\r\n              />\r\n            ))\r\n          ) : (\r\n            <p className=\"info-text\">Select files to view available activities</p>\r\n          )}\r\n          \r\n          {selectedFiles.length > 0 && Object.keys(selectedActivities).length > 0 && (\r\n            <button \r\n              className=\"analyze-button\" \r\n              onClick={handleAnalyze}\r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Analyzing...' : 'Analyze Selected Data'}\r\n            </button>\r\n          )}\r\n          \r\n          {error && <p className=\"error-message\">{error}</p>}\r\n        </section>\r\n        \r\n        <section className=\"results-section\">\r\n          <h2>Analysis Results</h2>\r\n          {Object.entries(plots).map(([fileId, plotData]) => (\r\n            <div key={fileId} className=\"result-container\">\r\n              <PlotViewer \r\n                key={`plot-${fileId}`}\r\n                fileName={files.find(file => file.id === fileId)?.name || fileId}\r\n                plotData={plotData} \r\n              />\r\n            {/* Add the FeatureImportanceViewer here */}\r\n            {plotData.plots?.feature_importance && plotData.features?.top_features && (\r\n              <FeatureImportanceViewer\r\n                key={`feat-imp-${fileId}`}\r\n                featureImportanceData={plotData.plots.feature_importance}\r\n                topFeatures={plotData.features.top_features}\r\n              />\r\n            )}\r\n            <InterpretationViewer \r\n              key={`interp-${fileId}`}\r\n              interpretationData={plotData.interpretation || {}}\r\n              topFeatures={plotData.features?.top_features || []}\r\n            />\r\n            </div>\r\n          ))}\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}