{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive - Universidad de Deusto\\\\Documentos\\\\nirs_web_app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FileUploader from './components/FileUploader';\nimport FileList from './components/FileList';\nimport ActivitySelector from './components/ActivitySelector';\nimport PlotViewer from './components/PlotViewer';\nimport { fetchAvailableFiles, analyzeFile } from './api/apiService';\nimport './styles/App.css';\nimport InterpretationViewer from './components/InterpretationViewer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State management\n  const [files, setFiles] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [activities, setActivities] = useState({});\n  const [selectedActivities, setSelectedActivities] = useState({});\n  const [plots, setPlots] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Load available files on component mount\n  useEffect(() => {\n    const loadFiles = async () => {\n      try {\n        const availableFiles = await fetchAvailableFiles();\n        setFiles(availableFiles);\n      } catch (err) {\n        console.error('Error loading files:', err);\n        setError('Failed to load available files');\n      }\n    };\n    loadFiles();\n  }, []);\n\n  // Handle file selection\n  const handleFileSelect = fileId => {\n    const isSelected = selectedFiles.includes(fileId);\n    if (isSelected) {\n      setSelectedFiles(selectedFiles.filter(id => id !== fileId));\n      setSelectedActivities(prev => {\n        const updated = {\n          ...prev\n        };\n        delete updated[fileId];\n        return updated;\n      });\n    } else {\n      setSelectedFiles([...selectedFiles, fileId]);\n    }\n  };\n\n  // Handle successful file upload\n  const handleFileUpload = uploadedFile => {\n    setFiles(prev => [...prev, uploadedFile]);\n  };\n\n  // Handle activity selection\n  const handleActivitySelect = (fileId, selectedActivitiesList) => {\n    setSelectedActivities(prev => ({\n      ...prev,\n      [fileId]: selectedActivitiesList\n    }));\n  };\n\n  // Handle analysis request\n  const handleAnalyze = async () => {\n    setLoading(true);\n    setError(null);\n    setPlots({});\n    try {\n      const results = {};\n\n      // Process each selected file with its selected activities\n      for (const fileId of selectedFiles) {\n        if (selectedActivities[fileId] && selectedActivities[fileId].length > 0) {\n          const fileResult = await analyzeFile(fileId, selectedActivities[fileId]);\n          results[fileId] = fileResult;\n        }\n      }\n      setPlots(results);\n    } catch (err) {\n      console.error('Analysis error:', err);\n      setError('An error occurred during analysis');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"NIRS Analysis Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"file-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"NIRS Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n          onFileUpload: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FileList, {\n          files: files,\n          selectedFiles: selectedFiles,\n          onSelectFile: handleFileSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"activity-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Activities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), selectedFiles.length > 0 ? selectedFiles.map(fileId => {\n          var _files$find;\n          return /*#__PURE__*/_jsxDEV(ActivitySelector, {\n            fileId: fileId,\n            fileName: ((_files$find = files.find(file => file.id === fileId)) === null || _files$find === void 0 ? void 0 : _files$find.name) || fileId,\n            onSelectActivities: activities => handleActivitySelect(fileId, activities)\n          }, fileId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"info-text\",\n          children: \"Select files to view available activities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), selectedFiles.length > 0 && Object.keys(selectedActivities).length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"analyze-button\",\n          onClick: handleAnalyze,\n          disabled: loading,\n          children: loading ? 'Analyzing...' : 'Analyze Selected Data'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"results-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Analysis Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), Object.keys(plots).length > 0 ? Object.entries(plots).map(([fileId, plotData]) => {\n          var _files$find2;\n          return /*#__PURE__*/_jsxDEV(PlotViewer, {\n            fileName: ((_files$find2 = files.find(file => file.id === fileId)) === null || _files$find2 === void 0 ? void 0 : _files$find2.name) || fileId,\n            plotData: plotData\n          }, fileId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"info-text\",\n          children: \"Run analysis to view results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), Object.keys(plots).length > 0 && Object.entries(plots).map(([fileId, plotData]) => {\n          var _files$find3;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(PlotViewer, {\n              fileName: ((_files$find3 = files.find(file => file.id === fileId)) === null || _files$find3 === void 0 ? void 0 : _files$find3.name) || fileId,\n              plotData: plotData\n            }, `plot-${fileId}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), plotData.interpretation && /*#__PURE__*/_jsxDEV(InterpretationViewer, {\n              interpretationData: plotData.interpretation\n            }, `interp-${fileId}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this)]\n          }, fileId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"w83IYmaJk6rgD1GlN6l9Mb9Kldc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FileUploader","FileList","ActivitySelector","PlotViewer","fetchAvailableFiles","analyzeFile","InterpretationViewer","jsxDEV","_jsxDEV","App","_s","files","setFiles","selectedFiles","setSelectedFiles","activities","setActivities","selectedActivities","setSelectedActivities","plots","setPlots","loading","setLoading","error","setError","loadFiles","availableFiles","err","console","handleFileSelect","fileId","isSelected","includes","filter","id","prev","updated","handleFileUpload","uploadedFile","handleActivitySelect","selectedActivitiesList","handleAnalyze","results","length","fileResult","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFileUpload","onSelectFile","map","_files$find","find","file","name","onSelectActivities","Object","keys","onClick","disabled","entries","plotData","_files$find2","_files$find3","interpretation","interpretationData","_c","$RefreshReg$"],"sources":["C:/Users/PC/OneDrive - Universidad de Deusto/Documentos/nirs_web_app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FileUploader from './components/FileUploader';\r\nimport FileList from './components/FileList';\r\nimport ActivitySelector from './components/ActivitySelector';\r\nimport PlotViewer from './components/PlotViewer';\r\nimport { fetchAvailableFiles, analyzeFile } from './api/apiService';\r\nimport './styles/App.css';\r\nimport InterpretationViewer from './components/InterpretationViewer';\r\nfunction App() {\r\n  // State management\r\n  const [files, setFiles] = useState([]);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [activities, setActivities] = useState({});\r\n  const [selectedActivities, setSelectedActivities] = useState({});\r\n  const [plots, setPlots] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Load available files on component mount\r\n  useEffect(() => {\r\n    const loadFiles = async () => {\r\n      try {\r\n        const availableFiles = await fetchAvailableFiles();\r\n        setFiles(availableFiles);\r\n      } catch (err) {\r\n        console.error('Error loading files:', err);\r\n        setError('Failed to load available files');\r\n      }\r\n    };\r\n    \r\n    loadFiles();\r\n  }, []);\r\n\r\n  // Handle file selection\r\n  const handleFileSelect = (fileId) => {\r\n    const isSelected = selectedFiles.includes(fileId);\r\n    \r\n    if (isSelected) {\r\n      setSelectedFiles(selectedFiles.filter(id => id !== fileId));\r\n      setSelectedActivities(prev => {\r\n        const updated = { ...prev };\r\n        delete updated[fileId];\r\n        return updated;\r\n      });\r\n    } else {\r\n      setSelectedFiles([...selectedFiles, fileId]);\r\n    }\r\n  };\r\n\r\n  // Handle successful file upload\r\n  const handleFileUpload = (uploadedFile) => {\r\n    setFiles(prev => [...prev, uploadedFile]);\r\n  };\r\n\r\n  // Handle activity selection\r\n  const handleActivitySelect = (fileId, selectedActivitiesList) => {\r\n    setSelectedActivities(prev => ({\r\n      ...prev,\r\n      [fileId]: selectedActivitiesList\r\n    }));\r\n  };\r\n\r\n  // Handle analysis request\r\n  const handleAnalyze = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    setPlots({});\r\n    \r\n    try {\r\n      const results = {};\r\n      \r\n      // Process each selected file with its selected activities\r\n      for (const fileId of selectedFiles) {\r\n        if (selectedActivities[fileId] && selectedActivities[fileId].length > 0) {\r\n          const fileResult = await analyzeFile(fileId, selectedActivities[fileId]);\r\n          results[fileId] = fileResult;\r\n        }\r\n      }\r\n      \r\n      setPlots(results);\r\n    } catch (err) {\r\n      console.error('Analysis error:', err);\r\n      setError('An error occurred during analysis');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <header className=\"app-header\">\r\n        <h1>NIRS Analysis Dashboard</h1>\r\n      </header>\r\n      \r\n      <main className=\"app-content\">\r\n        <section className=\"file-section\">\r\n          <h2>NIRS Files</h2>\r\n          <FileUploader onFileUpload={handleFileUpload} />\r\n          <FileList \r\n            files={files} \r\n            selectedFiles={selectedFiles} \r\n            onSelectFile={handleFileSelect}\r\n          />\r\n        </section>\r\n        \r\n        <section className=\"activity-section\">\r\n          <h2>Activities</h2>\r\n          {selectedFiles.length > 0 ? (\r\n            selectedFiles.map(fileId => (\r\n              <ActivitySelector\r\n                key={fileId}\r\n                fileId={fileId}\r\n                fileName={files.find(file => file.id === fileId)?.name || fileId}\r\n                onSelectActivities={(activities) => handleActivitySelect(fileId, activities)}\r\n              />\r\n            ))\r\n          ) : (\r\n            <p className=\"info-text\">Select files to view available activities</p>\r\n          )}\r\n          \r\n          {selectedFiles.length > 0 && Object.keys(selectedActivities).length > 0 && (\r\n            <button \r\n              className=\"analyze-button\" \r\n              onClick={handleAnalyze}\r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Analyzing...' : 'Analyze Selected Data'}\r\n            </button>\r\n          )}\r\n          \r\n          {error && <p className=\"error-message\">{error}</p>}\r\n        </section>\r\n        \r\n        <section className=\"results-section\">\r\n          <h2>Analysis Results</h2>\r\n          {Object.keys(plots).length > 0 ? (\r\n            Object.entries(plots).map(([fileId, plotData]) => (\r\n              <PlotViewer \r\n                key={fileId}\r\n                fileName={files.find(file => file.id === fileId)?.name || fileId}\r\n                plotData={plotData} \r\n              />\r\n            ))\r\n          ) : (\r\n            <p className=\"info-text\">Run analysis to view results</p>\r\n          )}\r\n          \r\n          {Object.keys(plots).length > 0 && (\r\n            Object.entries(plots).map(([fileId, plotData]) => (\r\n              <div key={fileId}>\r\n                <PlotViewer \r\n                  key={`plot-${fileId}`}\r\n                  fileName={files.find(file => file.id === fileId)?.name || fileId}\r\n                  plotData={plotData} \r\n                />\r\n                {plotData.interpretation && (\r\n                  <InterpretationViewer \r\n                    key={`interp-${fileId}`}\r\n                    interpretationData={plotData.interpretation}\r\n                  />\r\n                )}\r\n              </div>\r\n            ))\r\n          )}\r\n\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}