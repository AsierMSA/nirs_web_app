{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive - Universidad de Deusto\\\\Documentos\\\\nirs_web_app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FileUploader from './components/FileUploader';\nimport FileList from './components/FileList';\nimport PlotViewer from './components/PlotViewer'; // Importa PlotViewer\nimport TemporalValidationResults from './components/TemporalValidationResults'; // Importa el nuevo componente\nimport { fetchAvailableFiles, fetchFileActivities, analyzeFile, runTemporalValidation } from './api/apiService';\nimport './styles/App.css'; // Estilos generales de la aplicación\nimport './styles/components.css'; // Estilos para componentes como FileUploader, PlotViewer, etc.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [availableFiles, setAvailableFiles] = useState([]);\n  const [selectedFileIds, setSelectedFileIds] = useState([]); // Puede ser un array si permites múltiples\n  const [fileActivities, setFileActivities] = useState({}); // { fileId: ['act1', 'act2'], ... }\n  const [selectedActivities, setSelectedActivities] = useState({}); // { fileId: ['selectedAct1'], ... }\n  const [analysisResults, setAnalysisResults] = useState({}); // { fileId: { plots: {...}, features: {...}, ... }, ... }\n  const [temporalValidationData, setTemporalValidationData] = useState({}); // { fileId: { validation_score: ..., p_value: ... } }\n  const [loading, setLoading] = useState({\n    files: false,\n    activities: {},\n    analysis: {},\n    validation: {}\n  });\n  const [error, setError] = useState(null);\n\n  // Cargar archivos disponibles al montar el componente\n  useEffect(() => {\n    loadAvailableFiles();\n  }, []);\n  const loadAvailableFiles = async () => {\n    setLoading(prev => ({\n      ...prev,\n      files: true\n    }));\n    try {\n      const files = await fetchAvailableFiles();\n      setAvailableFiles(files);\n      setError(null);\n    } catch (err) {\n      setError(`Error fetching files: ${err.message}`);\n      console.error(err);\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        files: false\n      }));\n    }\n  };\n  const handleFileUpload = uploadedFile => {\n    setAvailableFiles(prevFiles => {\n      // Evitar duplicados si el archivo ya existe por alguna razón\n      if (!prevFiles.find(f => f.id === uploadedFile.id)) {\n        return [...prevFiles, uploadedFile];\n      }\n      return prevFiles;\n    });\n    // Opcionalmente, seleccionar el archivo recién subido y cargar sus actividades\n    // handleFileSelect(uploadedFile.id); \n  };\n  const handleFileSelect = async fileId => {\n    const newSelectedFileIds = selectedFileIds.includes(fileId) ? selectedFileIds.filter(id => id !== fileId) : [...selectedFileIds, fileId];\n    setSelectedFileIds(newSelectedFileIds);\n    if (newSelectedFileIds.includes(fileId) && !fileActivities[fileId]) {\n      setLoading(prev => ({\n        ...prev,\n        activities: {\n          ...prev.activities,\n          [fileId]: true\n        }\n      }));\n      try {\n        const activities = await fetchFileActivities(fileId);\n        setFileActivities(prev => ({\n          ...prev,\n          [fileId]: activities\n        }));\n        // Por defecto, seleccionar todas las actividades o la primera\n        if (activities.length > 0) {\n          setSelectedActivities(prev => ({\n            ...prev,\n            [fileId]: activities\n          })); // Seleccionar todas por defecto\n        }\n        setError(null);\n      } catch (err) {\n        setError(`Error fetching activities for ${fileId}: ${err.message}`);\n        console.error(err);\n      } finally {\n        setLoading(prev => ({\n          ...prev,\n          activities: {\n            ...prev.activities,\n            [fileId]: false\n          }\n        }));\n      }\n    }\n  };\n  const handleActivityChange = (fileId, activity, isChecked) => {\n    setSelectedActivities(prev => {\n      const currentActivities = prev[fileId] || [];\n      const newActivities = isChecked ? [...currentActivities, activity] : currentActivities.filter(a => a !== activity);\n      return {\n        ...prev,\n        [fileId]: newActivities\n      };\n    });\n  };\n  const handleAnalyze = async fileId => {\n    if (!selectedActivities[fileId] || selectedActivities[fileId].length === 0) {\n      setError(`Please select activities for ${fileId} before analyzing.`);\n      return;\n    }\n    setLoading(prev => ({\n      ...prev,\n      analysis: {\n        ...prev.analysis,\n        [fileId]: true\n      }\n    }));\n    setError(null);\n    try {\n      const results = await analyzeFile(fileId, selectedActivities[fileId]);\n      setAnalysisResults(prev => ({\n        ...prev,\n        [fileId]: results\n      }));\n    } catch (err) {\n      setError(`Analysis failed for ${fileId}: ${err.message}`);\n      console.error(err);\n      setAnalysisResults(prev => ({\n        ...prev,\n        [fileId]: {\n          error: `Analysis failed: ${err.message}`\n        }\n      }));\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        analysis: {\n          ...prev.analysis,\n          [fileId]: false\n        }\n      }));\n    }\n  };\n  const handleTemporalValidation = async fileId => {\n    if (!selectedActivities[fileId] || selectedActivities[fileId].length === 0) {\n      setError(`Please select activities for ${fileId} before validation.`);\n      return;\n    }\n    setLoading(prev => ({\n      ...prev,\n      validation: {\n        ...prev.validation,\n        [fileId]: true\n      }\n    }));\n    setError(null);\n    try {\n      const validationResult = await runTemporalValidation(fileId, selectedActivities[fileId]);\n      // La API devuelve { temporal_validation: {...} }\n      setTemporalValidationData(prev => ({\n        ...prev,\n        [fileId]: validationResult.temporal_validation\n      }));\n    } catch (err) {\n      setError(`Temporal validation failed for ${fileId}: ${err.message}`);\n      console.error(err);\n      setTemporalValidationData(prev => ({\n        ...prev,\n        [fileId]: {\n          error: `Validation failed: ${err.message}`\n        }\n      }));\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        validation: {\n          ...prev.validation,\n          [fileId]: false\n        }\n      }));\n    }\n  };\n\n  // Lógica para eliminar archivos (a implementar si es necesario)\n  // const handleFileDelete = async (fileId) => { ... }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"NIRS Analysis Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload NIRS File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n        onFileUpload: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"files-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Available Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), loading.files ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading files...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 28\n        }, this) : /*#__PURE__*/_jsxDEV(FileList, {\n          files: availableFiles,\n          selectedFiles: selectedFileIds,\n          onSelectFile: handleFileSelect\n          // onDeleteFile={handleFileDelete} // Descomentar si se implementa la eliminación\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"activities-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Activities & Analyze\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), selectedFileIds.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"info-text\",\n          children: \"Select a file to see available activities.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 44\n        }, this), selectedFileIds.map(fileId => {\n          const file = availableFiles.find(f => f.id === fileId);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-analysis-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: (file === null || file === void 0 ? void 0 : file.name) || fileId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), loading.activities[fileId] && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading activities...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 48\n            }, this), fileActivities[fileId] && fileActivities[fileId].length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activity-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Activities:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this), fileActivities[fileId].map(activity => {\n                var _selectedActivities$f;\n                return /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"activity-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: ((_selectedActivities$f = selectedActivities[fileId]) === null || _selectedActivities$f === void 0 ? void 0 : _selectedActivities$f.includes(activity)) || false,\n                    onChange: e => handleActivityChange(fileId, activity, e.target.checked)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 25\n                  }, this), activity]\n                }, activity, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this), fileActivities[fileId] && fileActivities[fileId].length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No activities found in this file.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"analyze-button\",\n                onClick: () => handleAnalyze(fileId),\n                disabled: loading.analysis[fileId] || !selectedActivities[fileId] || selectedActivities[fileId].length === 0,\n                children: loading.analysis[fileId] ? 'Analyzing...' : 'Run Analysis'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"validate-button\" // Nueva clase para el botón de validación\n                ,\n                onClick: () => handleTemporalValidation(fileId),\n                disabled: loading.validation[fileId] || !selectedActivities[fileId] || selectedActivities[fileId].length === 0,\n                children: loading.validation[fileId] ? 'Validating...' : 'Temporal Validation'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)]\n          }, fileId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Analysis Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), selectedFileIds.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"info-text\",\n        children: \"Select and analyze a file to see results.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 42\n      }, this), selectedFileIds.map(fileId => {\n        const file = availableFiles.find(f => f.id === fileId);\n        const resultData = analysisResults[fileId];\n        const validationResult = temporalValidationData[fileId];\n\n        // Solo mostrar PlotViewer si hay resultados de análisis Y NO hay error en el análisis\n        const shouldShowPlotViewer = resultData && !resultData.error;\n        // Solo mostrar TemporalValidationResults si hay datos de validación Y NO hay error en la validación\n        const shouldShowValidation = validationResult && !validationResult.error;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-results-container\",\n          children: [(shouldShowPlotViewer || shouldShowValidation) && /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Results for: \", (file === null || file === void 0 ? void 0 : file.name) || fileId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 66\n          }, this), loading.analysis[fileId] && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Loading analysis for \", (file === null || file === void 0 ? void 0 : file.name) || fileId, \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 44\n          }, this), loading.validation[fileId] && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Loading temporal validation for \", (file === null || file === void 0 ? void 0 : file.name) || fileId, \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 46\n          }, this), shouldShowValidation && /*#__PURE__*/_jsxDEV(TemporalValidationResults, {\n            validationData: validationResult\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this), validationResult && validationResult.error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Temporal Validation Error for \", (file === null || file === void 0 ? void 0 : file.name) || fileId, \": \", validationResult.error]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this), shouldShowPlotViewer && /*#__PURE__*/_jsxDEV(PlotViewer, {\n            fileName: (file === null || file === void 0 ? void 0 : file.name) || fileId,\n            plotData: resultData // plotData es todo el objeto de resultado del análisis\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this), resultData && resultData.error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plot-viewer\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"file-heading\",\n              children: (file === null || file === void 0 ? void 0 : file.name) || fileId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: resultData.error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 18\n          }, this), !loading.analysis[fileId] && !resultData && selectedFileIds.includes(fileId) && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"info-text\",\n            children: [\"Click \\\"Run Analysis\\\" for \", (file === null || file === void 0 ? void 0 : file.name) || fileId, \" to see plots.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this)]\n        }, `results-${fileId}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"URZayM7COrj6/RaIUMO5Pdq7nZc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FileUploader","FileList","PlotViewer","TemporalValidationResults","fetchAvailableFiles","fetchFileActivities","analyzeFile","runTemporalValidation","jsxDEV","_jsxDEV","App","_s","availableFiles","setAvailableFiles","selectedFileIds","setSelectedFileIds","fileActivities","setFileActivities","selectedActivities","setSelectedActivities","analysisResults","setAnalysisResults","temporalValidationData","setTemporalValidationData","loading","setLoading","files","activities","analysis","validation","error","setError","loadAvailableFiles","prev","err","message","console","handleFileUpload","uploadedFile","prevFiles","find","f","id","handleFileSelect","fileId","newSelectedFileIds","includes","filter","length","handleActivityChange","activity","isChecked","currentActivities","newActivities","a","handleAnalyze","results","handleTemporalValidation","validationResult","temporal_validation","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFileUpload","selectedFiles","onSelectFile","map","file","name","_selectedActivities$f","type","checked","onChange","e","target","onClick","disabled","resultData","shouldShowPlotViewer","shouldShowValidation","validationData","plotData","_c","$RefreshReg$"],"sources":["C:/Users/PC/OneDrive - Universidad de Deusto/Documentos/nirs_web_app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FileUploader from './components/FileUploader';\r\nimport FileList from './components/FileList';\r\nimport PlotViewer from './components/PlotViewer'; // Importa PlotViewer\r\nimport TemporalValidationResults from './components/TemporalValidationResults'; // Importa el nuevo componente\r\nimport { fetchAvailableFiles, fetchFileActivities, analyzeFile, runTemporalValidation } from './api/apiService';\r\nimport './styles/App.css'; // Estilos generales de la aplicación\r\nimport './styles/components.css'; // Estilos para componentes como FileUploader, PlotViewer, etc.\r\n\r\nfunction App() {\r\n  const [availableFiles, setAvailableFiles] = useState([]);\r\n  const [selectedFileIds, setSelectedFileIds] = useState([]); // Puede ser un array si permites múltiples\r\n  const [fileActivities, setFileActivities] = useState({}); // { fileId: ['act1', 'act2'], ... }\r\n  const [selectedActivities, setSelectedActivities] = useState({}); // { fileId: ['selectedAct1'], ... }\r\n  const [analysisResults, setAnalysisResults] = useState({}); // { fileId: { plots: {...}, features: {...}, ... }, ... }\r\n  const [temporalValidationData, setTemporalValidationData] = useState({}); // { fileId: { validation_score: ..., p_value: ... } }\r\n  const [loading, setLoading] = useState({ files: false, activities: {}, analysis: {}, validation: {} });\r\n  const [error, setError] = useState(null);\r\n\r\n  // Cargar archivos disponibles al montar el componente\r\n  useEffect(() => {\r\n    loadAvailableFiles();\r\n  }, []);\r\n\r\n  const loadAvailableFiles = async () => {\r\n    setLoading(prev => ({ ...prev, files: true }));\r\n    try {\r\n      const files = await fetchAvailableFiles();\r\n      setAvailableFiles(files);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError(`Error fetching files: ${err.message}`);\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(prev => ({ ...prev, files: false }));\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = (uploadedFile) => {\r\n    setAvailableFiles(prevFiles => {\r\n      // Evitar duplicados si el archivo ya existe por alguna razón\r\n      if (!prevFiles.find(f => f.id === uploadedFile.id)) {\r\n        return [...prevFiles, uploadedFile];\r\n      }\r\n      return prevFiles;\r\n    });\r\n    // Opcionalmente, seleccionar el archivo recién subido y cargar sus actividades\r\n    // handleFileSelect(uploadedFile.id); \r\n  };\r\n\r\n  const handleFileSelect = async (fileId) => {\r\n    const newSelectedFileIds = selectedFileIds.includes(fileId)\r\n      ? selectedFileIds.filter(id => id !== fileId)\r\n      : [...selectedFileIds, fileId];\r\n    setSelectedFileIds(newSelectedFileIds);\r\n\r\n    if (newSelectedFileIds.includes(fileId) && !fileActivities[fileId]) {\r\n      setLoading(prev => ({ ...prev, activities: { ...prev.activities, [fileId]: true } }));\r\n      try {\r\n        const activities = await fetchFileActivities(fileId);\r\n        setFileActivities(prev => ({ ...prev, [fileId]: activities }));\r\n        // Por defecto, seleccionar todas las actividades o la primera\r\n        if (activities.length > 0) {\r\n          setSelectedActivities(prev => ({ ...prev, [fileId]: activities })); // Seleccionar todas por defecto\r\n        }\r\n        setError(null);\r\n      } catch (err) {\r\n        setError(`Error fetching activities for ${fileId}: ${err.message}`);\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(prev => ({ ...prev, activities: { ...prev.activities, [fileId]: false } }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleActivityChange = (fileId, activity, isChecked) => {\r\n    setSelectedActivities(prev => {\r\n      const currentActivities = prev[fileId] || [];\r\n      const newActivities = isChecked\r\n        ? [...currentActivities, activity]\r\n        : currentActivities.filter(a => a !== activity);\r\n      return { ...prev, [fileId]: newActivities };\r\n    });\r\n  };\r\n\r\n  const handleAnalyze = async (fileId) => {\r\n    if (!selectedActivities[fileId] || selectedActivities[fileId].length === 0) {\r\n      setError(`Please select activities for ${fileId} before analyzing.`);\r\n      return;\r\n    }\r\n    setLoading(prev => ({ ...prev, analysis: { ...prev.analysis, [fileId]: true } }));\r\n    setError(null);\r\n    try {\r\n      const results = await analyzeFile(fileId, selectedActivities[fileId]);\r\n      setAnalysisResults(prev => ({ ...prev, [fileId]: results }));\r\n    } catch (err) {\r\n      setError(`Analysis failed for ${fileId}: ${err.message}`);\r\n      console.error(err);\r\n      setAnalysisResults(prev => ({ ...prev, [fileId]: { error: `Analysis failed: ${err.message}` } }));\r\n    } finally {\r\n      setLoading(prev => ({ ...prev, analysis: { ...prev.analysis, [fileId]: false } }));\r\n    }\r\n  };\r\n\r\n  const handleTemporalValidation = async (fileId) => {\r\n    if (!selectedActivities[fileId] || selectedActivities[fileId].length === 0) {\r\n      setError(`Please select activities for ${fileId} before validation.`);\r\n      return;\r\n    }\r\n    setLoading(prev => ({ ...prev, validation: { ...prev.validation, [fileId]: true } }));\r\n    setError(null);\r\n    try {\r\n      const validationResult = await runTemporalValidation(fileId, selectedActivities[fileId]);\r\n      // La API devuelve { temporal_validation: {...} }\r\n      setTemporalValidationData(prev => ({ ...prev, [fileId]: validationResult.temporal_validation }));\r\n    } catch (err) {\r\n      setError(`Temporal validation failed for ${fileId}: ${err.message}`);\r\n      console.error(err);\r\n      setTemporalValidationData(prev => ({ ...prev, [fileId]: { error: `Validation failed: ${err.message}` } }));\r\n    } finally {\r\n      setLoading(prev => ({ ...prev, validation: { ...prev.validation, [fileId]: false } }));\r\n    }\r\n  };\r\n  \r\n  // Lógica para eliminar archivos (a implementar si es necesario)\r\n  // const handleFileDelete = async (fileId) => { ... }\r\n\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <header className=\"app-header\">\r\n        <h1>NIRS Analysis Dashboard</h1>\r\n      </header>\r\n\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      <section className=\"upload-section\">\r\n        <h2>Upload NIRS File</h2>\r\n        <FileUploader onFileUpload={handleFileUpload} />\r\n      </section>\r\n\r\n      <div className=\"app-content\">\r\n        <section className=\"files-section\">\r\n          <h2>Available Files</h2>\r\n          {loading.files ? <p>Loading files...</p> : (\r\n            <FileList\r\n              files={availableFiles}\r\n              selectedFiles={selectedFileIds}\r\n              onSelectFile={handleFileSelect}\r\n              // onDeleteFile={handleFileDelete} // Descomentar si se implementa la eliminación\r\n            />\r\n          )}\r\n        </section>\r\n\r\n        <section className=\"activities-section\">\r\n          <h2>Select Activities & Analyze</h2>\r\n          {selectedFileIds.length === 0 && <p className=\"info-text\">Select a file to see available activities.</p>}\r\n          {selectedFileIds.map(fileId => {\r\n            const file = availableFiles.find(f => f.id === fileId);\r\n            return (\r\n              <div key={fileId} className=\"file-analysis-block\">\r\n                <h3>{file?.name || fileId}</h3>\r\n                {loading.activities[fileId] && <p>Loading activities...</p>}\r\n                {fileActivities[fileId] && fileActivities[fileId].length > 0 && (\r\n                  <div className=\"activity-list\">\r\n                    <h4>Activities:</h4>\r\n                    {fileActivities[fileId].map(activity => (\r\n                      <label key={activity} className=\"activity-item\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={selectedActivities[fileId]?.includes(activity) || false}\r\n                          onChange={(e) => handleActivityChange(fileId, activity, e.target.checked)}\r\n                        />\r\n                        {activity}\r\n                      </label>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n                {fileActivities[fileId] && fileActivities[fileId].length === 0 && (\r\n                  <p>No activities found in this file.</p>\r\n                )}\r\n                <div className=\"button-group\">\r\n                  <button\r\n                    className=\"analyze-button\"\r\n                    onClick={() => handleAnalyze(fileId)}\r\n                    disabled={loading.analysis[fileId] || !selectedActivities[fileId] || selectedActivities[fileId].length === 0}\r\n                  >\r\n                    {loading.analysis[fileId] ? 'Analyzing...' : 'Run Analysis'}\r\n                  </button>\r\n                  <button\r\n                    className=\"validate-button\" // Nueva clase para el botón de validación\r\n                    onClick={() => handleTemporalValidation(fileId)}\r\n                    disabled={loading.validation[fileId] || !selectedActivities[fileId] || selectedActivities[fileId].length === 0}\r\n                  >\r\n                    {loading.validation[fileId] ? 'Validating...' : 'Temporal Validation'}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </section>\r\n      </div>\r\n\r\n      <section className=\"results-section\">\r\n        <h2>Analysis Results</h2>\r\n        {selectedFileIds.length === 0 && <p className=\"info-text\">Select and analyze a file to see results.</p>}\r\n        {selectedFileIds.map(fileId => {\r\n          const file = availableFiles.find(f => f.id === fileId);\r\n          const resultData = analysisResults[fileId];\r\n          const validationResult = temporalValidationData[fileId];\r\n\r\n          // Solo mostrar PlotViewer si hay resultados de análisis Y NO hay error en el análisis\r\n          const shouldShowPlotViewer = resultData && !resultData.error;\r\n          // Solo mostrar TemporalValidationResults si hay datos de validación Y NO hay error en la validación\r\n          const shouldShowValidation = validationResult && !validationResult.error;\r\n\r\n          return (\r\n            <div key={`results-${fileId}`} className=\"file-results-container\">\r\n              {/* Mostrar el nombre del archivo solo si hay resultados o datos de validación para mostrar */}\r\n              {(shouldShowPlotViewer || shouldShowValidation) && <h3>Results for: {file?.name || fileId}</h3>}\r\n\r\n              {loading.analysis[fileId] && <p>Loading analysis for {file?.name || fileId}...</p>}\r\n              {loading.validation[fileId] && <p>Loading temporal validation for {file?.name || fileId}...</p>}\r\n              \r\n              {/* Mostrar resultados de validación temporal si existen */}\r\n              {shouldShowValidation && (\r\n                <TemporalValidationResults validationData={validationResult} />\r\n              )}\r\n              {validationResult && validationResult.error && (\r\n                <div className=\"error-message\">\r\n                  <p>Temporal Validation Error for {file?.name || fileId}: {validationResult.error}</p>\r\n                </div>\r\n              )}\r\n\r\n              {/* Mostrar PlotViewer si hay resultados de análisis */}\r\n              {shouldShowPlotViewer && (\r\n                <PlotViewer\r\n                  fileName={file?.name || fileId}\r\n                  plotData={resultData} // plotData es todo el objeto de resultado del análisis\r\n                />\r\n              )}\r\n              {/* Mostrar error de análisis si existe */}\r\n              {resultData && resultData.error && (\r\n                 <div className=\"plot-viewer\"> {/* Usar clase para consistencia de estilo */}\r\n                    <h3 className=\"file-heading\">{file?.name || fileId}</h3>\r\n                    <div className=\"error-message\">\r\n                        <p>{resultData.error}</p>\r\n                        {/* Opcionalmente, si tu backend devuelve plots incluso con error: */}\r\n                        {/* resultData.plots?.events && <img src={`data:image/png;base64,${resultData.plots.events}`} alt=\"Events Timeline (Error Context)\" /> */}\r\n                    </div>\r\n                 </div>\r\n              )}\r\n              {!loading.analysis[fileId] && !resultData && selectedFileIds.includes(fileId) && (\r\n                <p className=\"info-text\">Click \"Run Analysis\" for {file?.name || fileId} to see plots.</p>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}